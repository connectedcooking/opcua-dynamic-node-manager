// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.di.objecttypes;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.di.datatypes.UpdateBehavior;
import com.prosysopc.ua.MethodOutputArguments;
import com.prosysopc.ua.ServiceException;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.nodes.Optional;
import com.prosysopc.ua.nodes.UaMethod;
import com.prosysopc.ua.stack.builtintypes.LocalizedText;
import com.prosysopc.ua.stack.builtintypes.NodeId;
import com.prosysopc.ua.stack.builtintypes.Variant;
import com.prosysopc.ua.types.opcua.FileDirectoryType;
import java.lang.Integer;
import java.lang.String;

/**
 * Generated on 2024-06-17 14:43:47
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/DI/;i=192")
public interface FileSystemLoadingType extends SoftwareLoadingType {
  String FILE_SYSTEM = "FileSystem";

  String GET_UPDATE_BEHAVIOR = "GetUpdateBehavior";

  String VALIDATE_FILES = "ValidateFiles";

  @Mandatory
  FileDirectoryType getFileSystemNode();

  @Mandatory
  UaMethod getGetUpdateBehaviorNode();

  UpdateBehavior getUpdateBehavior(NodeId[] f_nodeIds) throws StatusException, ServiceException;

  @Optional
  UaMethod getValidateFilesNode();

  ValidateFilesMethodOutputs validateFiles(NodeId[] f_nodeIds) throws StatusException,
      ServiceException;

  class ValidateFilesMethodOutputs implements MethodOutputArguments {
    protected Integer f_errorCode;

    protected LocalizedText f_errorMessage;

    public ValidateFilesMethodOutputs(Integer f_errorCode, LocalizedText f_errorMessage) {
      this.f_errorCode = f_errorCode;
      this.f_errorMessage = f_errorMessage;
    }

    public Integer getErrorCode() {
      return this.f_errorCode;
    }

    public LocalizedText getErrorMessage() {
      return this.f_errorMessage;
    }

    public final Variant[] asVariantArray() {
      return new Variant[]{new Variant(f_errorCode), new Variant(f_errorMessage)};
    }
  }
}
