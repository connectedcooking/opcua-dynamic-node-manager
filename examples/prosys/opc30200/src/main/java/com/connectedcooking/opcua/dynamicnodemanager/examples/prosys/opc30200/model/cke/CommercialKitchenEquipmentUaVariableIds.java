// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.UaNodeId;
import java.util.Set;

/**
 * Generated on 2025-04-16 18:27:26
 */
public interface CommercialKitchenEquipmentUaVariableIds {
  UaNodeId BeverageSMLEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initBeverageSMLEnumeration_EnumStrings();

  UaNodeId ChamberModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initChamberModeEnumeration_EnumStrings();

  UaNodeId CoffeeMachineModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineModeEnumeration_EnumStrings();

  UaNodeId CombiSteamerModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerModeEnumeration_EnumStrings();

  UaNodeId CookingKettleModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleModeEnumeration_EnumStrings();

  UaNodeId CurrentStateEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCurrentStateEnumeration_EnumStrings();

  UaNodeId EnergySourceEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initEnergySourceEnumeration_EnumStrings();

  UaNodeId FryerModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initFryerModeEnumeration_EnumStrings();

  UaNodeId FryingPanModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanModeEnumeration_EnumStrings();

  UaNodeId GrillingZoneStateEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initGrillingZoneStateEnumeration_EnumStrings();

  UaNodeId HygieneModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initHygieneModeEnumeration_EnumStrings();

  UaNodeId MultiFunctionPanModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanModeEnumeration_EnumStrings();

  UaNodeId OperatingModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initOperatingModeEnumeration_EnumStrings();

  UaNodeId OperationModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initOperationModeEnumeration_EnumStrings();

  UaNodeId PastaCookerModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerModeEnumeration_EnumStrings();

  UaNodeId PlatenPositionStateEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initPlatenPositionStateEnumeration_EnumStrings();

  UaNodeId PressureCookingKettleModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleModeEnumeration_EnumStrings();

  UaNodeId ProgramModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initProgramModeEnumeration_EnumStrings();

  UaNodeId SignalModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initSignalModeEnumeration_EnumStrings();

  UaNodeId SpecialCookingModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initSpecialCookingModeEnumeration_EnumStrings();

  UaNodeId SpecialFunctionModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initSpecialFunctionModeEnumeration_EnumStrings();

  UaNodeId StatusEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initStatusEnumeration_EnumStrings();

  UaNodeId TrayModeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initTrayModeEnumeration_EnumStrings();

  UaNodeId TrayTypeEnumeration_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initTrayTypeEnumeration_EnumStrings();

  UaNodeId BatchInformationType_BatchId = CommercialKitchenEquipmentUaVariableIdsInit.initBatchInformationType_BatchId();

  UaNodeId BatchInformationType_LocalTime = CommercialKitchenEquipmentUaVariableIdsInit.initBatchInformationType_LocalTime();

  UaNodeId BatchInformationType_SystemTime = CommercialKitchenEquipmentUaVariableIdsInit.initBatchInformationType_SystemTime();

  UaNodeId BatchInformationType_OrderId = CommercialKitchenEquipmentUaVariableIdsInit.initBatchInformationType_OrderId();

  UaNodeId KitchenDeviceHAConfigType_SamplingInterval = CommercialKitchenEquipmentUaVariableIdsInit.initKitchenDeviceHAConfigType_SamplingInterval();

  UaNodeId KitchenDeviceHAConfigType_HistoryDuration = CommercialKitchenEquipmentUaVariableIdsInit.initKitchenDeviceHAConfigType_HistoryDuration();

  UaNodeId KitchenDeviceParameterType_ProgramName = CommercialKitchenEquipmentUaVariableIdsInit.initKitchenDeviceParameterType_ProgramName();

  UaNodeId KitchenDeviceParameterType_ProgramId = CommercialKitchenEquipmentUaVariableIdsInit.initKitchenDeviceParameterType_ProgramId();

  UaNodeId KitchenDeviceParameterType_ProgramUId = CommercialKitchenEquipmentUaVariableIdsInit.initKitchenDeviceParameterType_ProgramUId();

  UaNodeId ChamberType_SetTopTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetTopTemperature_EngineeringUnits();

  UaNodeId ChamberType_SetTopTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetTopTemperature();

  UaNodeId ChamberType_SetTopTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetTopTemperature_EURange();

  UaNodeId ChamberType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_TimeRemaining();

  UaNodeId ChamberType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetCoreTemperature_EngineeringUnits();

  UaNodeId ChamberType_SetFanSpeed = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetFanSpeed();

  UaNodeId ChamberType_ActualChamberTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualChamberTemperature__No___EURange();

  UaNodeId ChamberType_SetBottomTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBottomTemperature_EngineeringUnits();

  UaNodeId ChamberType_IsReadyToStart = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_IsReadyToStart();

  UaNodeId ChamberType_ActualCoreTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualCoreTemperature__No__();

  UaNodeId ChamberType_SetFanSpeed_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetFanSpeed_EngineeringUnits();

  UaNodeId ChamberType_ActualBottomTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBottomTemperature__No___EngineeringUnits();

  UaNodeId ChamberType_ActualBottomTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBottomTemperature__No___EURange();

  UaNodeId ChamberType_SetBoilerTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBoilerTemperature_EURange();

  UaNodeId ChamberType_ActualTopTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualTopTemperature__No___EURange();

  UaNodeId ChamberType_SetBottomTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBottomTemperature_EURange();

  UaNodeId ChamberType_OperationMode = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_OperationMode();

  UaNodeId ChamberType_ActualCoreTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualCoreTemperature__No___EURange();

  UaNodeId ChamberType_ActualTopTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualTopTemperature__No__();

  UaNodeId ChamberType_SetHumidity_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetHumidity_EURange();

  UaNodeId ChamberType_SetHumidity_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetHumidity_EngineeringUnits();

  UaNodeId ChamberType_SetChamberTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetChamberTemperature();

  UaNodeId ChamberType_SetBoilerTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBoilerTemperature_EngineeringUnits();

  UaNodeId ChamberType_SetProcessTimeProgram = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetProcessTimeProgram();

  UaNodeId ChamberType_SetChamberTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetChamberTemperature_EURange();

  UaNodeId ChamberType_ActualChamberTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualChamberTemperature__No___EngineeringUnits();

  UaNodeId ChamberType_ActualHumidity__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualHumidity__No___EURange();

  UaNodeId ChamberType_SetFanSpeed_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetFanSpeed_EURange();

  UaNodeId ChamberType_ActualHumidity__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualHumidity__No___EngineeringUnits();

  UaNodeId ChamberType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetProcessTimeProgram_EngineeringUnits();

  UaNodeId ChamberType_ActualBottomTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBottomTemperature__No__();

  UaNodeId ChamberType_ActualFanSpeed__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualFanSpeed__No__();

  UaNodeId ChamberType_SetBoilerTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBoilerTemperature();

  UaNodeId ChamberType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetProcessTimeProgram_EURange();

  UaNodeId ChamberType_ActualBoilerTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBoilerTemperature__No___EngineeringUnits();

  UaNodeId ChamberType_ActualChamberTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualChamberTemperature__No__();

  UaNodeId ChamberType_SetBottomTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetBottomTemperature();

  UaNodeId ChamberType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_TimeRemaining_EngineeringUnits();

  UaNodeId ChamberType_ActualFanSpeed__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualFanSpeed__No___EURange();

  UaNodeId ChamberType_ActualHumidity__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualHumidity__No__();

  UaNodeId ChamberType_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetCoreTemperature_EURange();

  UaNodeId ChamberType_IsProgramEnd = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_IsProgramEnd();

  UaNodeId ChamberType_ActualBoilerTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBoilerTemperature__No___EURange();

  UaNodeId ChamberType_ActualCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualCoreTemperature__No___EngineeringUnits();

  UaNodeId ChamberType_SetHumidity = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetHumidity();

  UaNodeId ChamberType_SetChamberTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetChamberTemperature_EngineeringUnits();

  UaNodeId ChamberType_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_SetCoreTemperature();

  UaNodeId ChamberType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_TimeRemaining_EURange();

  UaNodeId ChamberType_ActualTopTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualTopTemperature__No___EngineeringUnits();

  UaNodeId ChamberType_ActualBoilerTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualBoilerTemperature__No__();

  UaNodeId ChamberType_ActualFanSpeed__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_ActualFanSpeed__No___EngineeringUnits();

  UaNodeId ChamberType_IsDoorOpen = CommercialKitchenEquipmentUaVariableIdsInit.initChamberType_IsDoorOpen();

  UaNodeId CoffeeMachineParameterType_BoilerTempWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater_EngineeringUnits();

  UaNodeId CoffeeMachineParameterType_BoilerPressureWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater();

  UaNodeId CoffeeMachineParameterType_GrinderRuntime__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No___EngineeringUnits();

  UaNodeId CoffeeMachineParameterType_GrinderRuntime__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No___EURange();

  UaNodeId CoffeeMachineParameterType_BoilerTempSteam = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam();

  UaNodeId CoffeeMachineParameterType_SystemClean = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_SystemClean();

  UaNodeId CoffeeMachineParameterType_BoilerTempSteam_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam_EngineeringUnits();

  UaNodeId CoffeeMachineParameterType_BoilerTempWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater_EURange();

  UaNodeId CoffeeMachineParameterType_CurrentState = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_CurrentState();

  UaNodeId CoffeeMachineParameterType_BoilerPressureWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater_EURange();

  UaNodeId CoffeeMachineParameterType_BoilerTempSteam_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam_EURange();

  UaNodeId CoffeeMachineParameterType_BoilerPressureSteam = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureSteam();

  UaNodeId CoffeeMachineParameterType_BoilerPressureWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater_EngineeringUnits();

  UaNodeId CoffeeMachineParameterType_BoilerPressureSteam_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureSteam_EURange();

  UaNodeId CoffeeMachineParameterType_GrinderRuntime__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No__();

  UaNodeId CoffeeMachineParameterType_BoilerTempWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater();

  UaNodeId CoffeeMachineParameterType_TotalBrew__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_TotalBrew__No__();

  UaNodeId CoffeeMachineParameterType_TotalMix = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineParameterType_TotalMix();

  UaNodeId CoffeeMachineRecipeParameterType_RcpType_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_RcpType_EnumStrings();

  UaNodeId CoffeeMachineRecipeParameterType_FoamAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount();

  UaNodeId CoffeeMachineRecipeParameterType_PowderAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount_EngineeringUnits();

  UaNodeId CoffeeMachineRecipeParameterType_RcpType = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_RcpType();

  UaNodeId CoffeeMachineRecipeParameterType_FoamAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount_EngineeringUnits();

  UaNodeId CoffeeMachineRecipeParameterType_CoffeeType_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_CoffeeType_EnumStrings();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount_EngineeringUnits();

  UaNodeId CoffeeMachineRecipeParameterType_BeverageSize_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize_EngineeringUnits();

  UaNodeId CoffeeMachineRecipeParameterType_CoffeeType = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_CoffeeType();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater_EngineeringUnits();

  UaNodeId CoffeeMachineRecipeParameterType_BeverageSML = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSML();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_PowderAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount();

  UaNodeId CoffeeMachineRecipeParameterType_BeverageSize_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_PowderAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount();

  UaNodeId CoffeeMachineRecipeParameterType_MilkAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount();

  UaNodeId CoffeeMachineRecipeParameterType_FoamAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_MilkAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_BeverageSize = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater();

  UaNodeId CoffeeMachineRecipeParameterType_Container = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_Container();

  UaNodeId CoffeeMachineRecipeParameterType_Container_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_Container_EnumStrings();

  UaNodeId CoffeeMachineRecipeParameterType_GroundsWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater_EURange();

  UaNodeId CoffeeMachineRecipeParameterType_MilkAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No___EURange();

  UaNodeId CombiSteamerParameterType_TimeRemainingStep_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_SetProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetTemperature();

  UaNodeId CombiSteamerParameterType_TimeRemainingProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram_EURange();

  UaNodeId CombiSteamerParameterType_ActualHumidity_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualHumidity_EURange();

  UaNodeId CombiSteamerParameterType_SetExternalCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature_EURange();

  UaNodeId CombiSteamerParameterType_TimeRemainingProgram = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram();

  UaNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No__();

  UaNodeId CombiSteamerParameterType_SetHumidity_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetHumidity_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_IsDoorOpen = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_IsDoorOpen();

  UaNodeId CombiSteamerParameterType_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualTemperatureChamber__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No___EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No___EURange();

  UaNodeId CombiSteamerParameterType_CombiSteamerMode = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_CombiSteamerMode();

  UaNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No__();

  UaNodeId CombiSteamerParameterType_ActualTemperatureChamber__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No__();

  UaNodeId CombiSteamerParameterType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualTemperatureChamber__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No___EURange();

  UaNodeId CombiSteamerParameterType_SetProcessTimeStep_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep_EURange();

  UaNodeId CombiSteamerParameterType_TimeRemainingStep = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep();

  UaNodeId CombiSteamerParameterType_SetExternalCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_SetExternalCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature();

  UaNodeId CombiSteamerParameterType_SetHumidity = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetHumidity();

  UaNodeId CombiSteamerParameterType_SetInternalCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature();

  UaNodeId CombiSteamerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetTemperature_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No___EngineeringUnits();

  UaNodeId CombiSteamerParameterType_IsEnergySavingActive = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_IsEnergySavingActive();

  UaNodeId CombiSteamerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetTemperature_EURange();

  UaNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No___EngineeringUnits();

  UaNodeId CombiSteamerParameterType_ActualHumidity_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualHumidity_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_SetHumidity_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetHumidity_EURange();

  UaNodeId CombiSteamerParameterType_IsSteamExhaustSystemActive = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_IsSteamExhaustSystemActive();

  UaNodeId CombiSteamerParameterType_TimeRemainingStep_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep_EURange();

  UaNodeId CombiSteamerParameterType_SpecialCookingMode = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SpecialCookingMode();

  UaNodeId CombiSteamerParameterType_SetInternalCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature_EURange();

  UaNodeId CombiSteamerParameterType_SetInternalCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature_EngineeringUnits();

  UaNodeId CombiSteamerParameterType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram_EURange();

  UaNodeId CombiSteamerParameterType_SetProcessTimeProgram = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram();

  UaNodeId CombiSteamerParameterType_IsLoaActive = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_IsLoaActive();

  UaNodeId CombiSteamerParameterType_ActualHumidity = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_ActualHumidity();

  UaNodeId CombiSteamerParameterType_SetProcessTimeStep = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep();

  UaNodeId CookingKettleParameterType_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature();

  UaNodeId CookingKettleParameterType_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_CookingLevel();

  UaNodeId CookingKettleParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetProcessTime();

  UaNodeId CookingKettleParameterType_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SignalMode();

  UaNodeId CookingKettleParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualTemperature_EURange();

  UaNodeId CookingKettleParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature_EURange();

  UaNodeId CookingKettleParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetProcessTime_EURange();

  UaNodeId CookingKettleParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits();

  UaNodeId CookingKettleParameterType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_TimeRemaining();

  UaNodeId CookingKettleParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetTemperature_EURange();

  UaNodeId CookingKettleParameterType_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature();

  UaNodeId CookingKettleParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId CookingKettleParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_TimeRemaining_EngineeringUnits();

  UaNodeId CookingKettleParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ProgramMode();

  UaNodeId CookingKettleParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetTemperature();

  UaNodeId CookingKettleParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualTemperature();

  UaNodeId CookingKettleParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature_EngineeringUnits();

  UaNodeId CookingKettleParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId CookingKettleParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature_EURange();

  UaNodeId CookingKettleParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_TimeRemaining_EURange();

  UaNodeId CookingKettleParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleParameterType_SetTemperature_EngineeringUnits();

  UaNodeId CookingZoneParameterType_SetPowerValue_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetPowerValue_EngineeringUnits();

  UaNodeId CookingZoneParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualTemperature_EURange();

  UaNodeId CookingZoneParameterType_NominalPower_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_NominalPower_EngineeringUnits();

  UaNodeId CookingZoneParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualTemperature();

  UaNodeId CookingZoneParameterType_IsPanDetected = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_IsPanDetected();

  UaNodeId CookingZoneParameterType_ActualPower = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualPower();

  UaNodeId CookingZoneParameterType_CurrentState = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_CurrentState();

  UaNodeId CookingZoneParameterType_NominalPower = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_NominalPower();

  UaNodeId CookingZoneParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId CookingZoneParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetTemperature_EURange();

  UaNodeId CookingZoneParameterType_ActualPower_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualPower_EngineeringUnits();

  UaNodeId CookingZoneParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetTemperature_EngineeringUnits();

  UaNodeId CookingZoneParameterType_SetPowerValue = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetPowerValue();

  UaNodeId CookingZoneParameterType_SetPowerValue_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetPowerValue_EURange();

  UaNodeId CookingZoneParameterType_ActualPower_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualPower_EURange();

  UaNodeId CookingZoneParameterType_ActualProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualProcessTime();

  UaNodeId CookingZoneParameterType_ActualProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualProcessTime_EngineeringUnits();

  UaNodeId CookingZoneParameterType_NominalPower_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_NominalPower_EURange();

  UaNodeId CookingZoneParameterType_CookingZoneName = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_CookingZoneName();

  UaNodeId CookingZoneParameterType_ActualProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_ActualProcessTime_EURange();

  UaNodeId CookingZoneParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneParameterType_SetTemperature();

  UaNodeId DishWashingMachineProgramParameterType_ActualHygieneValue = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualHygieneValue();

  UaNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpointNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_OperationMode = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_OperationMode();

  UaNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_HygieneMode = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_HygieneMode();

  UaNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpointNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperatureNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No__();

  UaNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No__();

  UaNodeId DishWashingMachineProgramParameterType_ProductType = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ProductType();

  UaNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No__();

  UaNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperatureNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperatureNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No__();

  UaNodeId DishWashingMachineProgramParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ProgramMode();

  UaNodeId DishWashingMachineProgramParameterType_ProductGroup = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ProductGroup();

  UaNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpointNo();

  UaNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EURange();

  UaNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperatureNo();

  UaNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EngineeringUnits();

  UaNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpointNo();

  UaNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No__();

  UaNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No__();

  UaNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No__();

  UaNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No__();

  UaNodeId DishWashingMachineProgramParameterType_HygieneSetpoint = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineProgramParameterType_HygieneSetpoint();

  UaNodeId FryerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetTemperature_EngineeringUnits();

  UaNodeId FryerParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId FryerParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_ActualTemperature();

  UaNodeId FryerParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_TimeRemaining_EngineeringUnits();

  UaNodeId FryerParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_ProgramMode();

  UaNodeId FryerParameterType_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SignalMode();

  UaNodeId FryerParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId FryerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetTemperature_EURange();

  UaNodeId FryerParameterType_IsLiftUp = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_IsLiftUp();

  UaNodeId FryerParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetTemperature();

  UaNodeId FryerParameterType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_TimeRemaining();

  UaNodeId FryerParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetProcessTime();

  UaNodeId FryerParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_ActualTemperature_EURange();

  UaNodeId FryerParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_SetProcessTime_EURange();

  UaNodeId FryerParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerParameterType_TimeRemaining_EURange();

  UaNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No__();

  UaNodeId FryingAndGrillingParameterType_RemainingProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime();

  UaNodeId FryingAndGrillingParameterType_SetGrillTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No___EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime_EURange();

  UaNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No___EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No___EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No___EURange();

  UaNodeId FryingAndGrillingParameterType_PlatenPositionState = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_PlatenPositionState();

  UaNodeId FryingAndGrillingParameterType_SetGrillTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No___EURange();

  UaNodeId FryingAndGrillingParameterType_IsWithPlaten = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_IsWithPlaten();

  UaNodeId FryingAndGrillingParameterType_RemainingProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime_EURange();

  UaNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No___EURange();

  UaNodeId FryingAndGrillingParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime();

  UaNodeId FryingAndGrillingParameterType_GrillingZoneName = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_GrillingZoneName();

  UaNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No___EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_SetGrillTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No__();

  UaNodeId FryingAndGrillingParameterType_CurrentState = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_CurrentState();

  UaNodeId FryingAndGrillingParameterType_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime_EngineeringUnits();

  UaNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No__();

  UaNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No__();

  UaNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No___EURange();

  UaNodeId FryingPanParameterType_ActualPressurePan_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualPressurePan_EngineeringUnits();

  UaNodeId FryingPanParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetTemperature_EngineeringUnits();

  UaNodeId FryingPanParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature_EURange();

  UaNodeId FryingPanParameterType_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_CookingLevel();

  UaNodeId FryingPanParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId FryingPanParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetCoreTemperature_EngineeringUnits();

  UaNodeId FryingPanParameterType_ActualPressurePan_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualPressurePan_EURange();

  UaNodeId FryingPanParameterType_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SignalMode();

  UaNodeId FryingPanParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_TimeRemaining_EURange();

  UaNodeId FryingPanParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualTemperature_EURange();

  UaNodeId FryingPanParameterType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_TimeRemaining();

  UaNodeId FryingPanParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualTemperature();

  UaNodeId FryingPanParameterType_ActualPressurePan = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualPressurePan();

  UaNodeId FryingPanParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetProcessTime_EURange();

  UaNodeId FryingPanParameterType_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetCoreTemperature();

  UaNodeId FryingPanParameterType_IsLidLocked = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_IsLidLocked();

  UaNodeId FryingPanParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_TimeRemaining_EngineeringUnits();

  UaNodeId FryingPanParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature_EngineeringUnits();

  UaNodeId FryingPanParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetTemperature();

  UaNodeId FryingPanParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetCoreTemperature_EURange();

  UaNodeId FryingPanParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId FryingPanParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetTemperature_EURange();

  UaNodeId FryingPanParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ProgramMode();

  UaNodeId FryingPanParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_SetProcessTime();

  UaNodeId FryingPanParameterType_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature();

  UaNodeId IceMachineParameterType_Status = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_Status();

  UaNodeId IceMachineParameterType_WaterFillTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_WaterFillTime_EngineeringUnits();

  UaNodeId IceMachineParameterType_LastHarvestTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastHarvestTime_EngineeringUnits();

  UaNodeId IceMachineParameterType_LastHarvestTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastHarvestTime_EURange();

  UaNodeId IceMachineParameterType_Temperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_Temperature__No__();

  UaNodeId IceMachineParameterType_WaterFillTime = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_WaterFillTime();

  UaNodeId IceMachineParameterType_LastFreezeTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastFreezeTime_EURange();

  UaNodeId IceMachineParameterType_Temperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_Temperature__No___EngineeringUnits();

  UaNodeId IceMachineParameterType_LastFreezeTime = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastFreezeTime();

  UaNodeId IceMachineParameterType_WaterFillTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_WaterFillTime_EURange();

  UaNodeId IceMachineParameterType_Temperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_Temperature__No___EURange();

  UaNodeId IceMachineParameterType_LastFreezeTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastFreezeTime_EngineeringUnits();

  UaNodeId IceMachineParameterType_LastHarvestTime = CommercialKitchenEquipmentUaVariableIdsInit.initIceMachineParameterType_LastHarvestTime();

  UaNodeId MicrowaveCombiOvenParameterType_CookingStep = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_CookingStep();

  UaNodeId MicrowaveCombiOvenParameterType_OperatingMode = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_OperatingMode();

  UaNodeId MicrowaveCombiOvenParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime();

  UaNodeId MicrowaveCombiOvenParameterType_FanSpeed = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy();

  UaNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber();

  UaNodeId MicrowaveCombiOvenParameterType_FanSpeed_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature();

  UaNodeId MicrowaveCombiOvenParameterType_FanSpeed_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_IsDoorOpen = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_IsDoorOpen();

  UaNodeId MicrowaveCombiOvenParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature_EURange();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep();

  UaNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime();

  UaNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber_EURange();

  UaNodeId MultiFunctionPanParameterType_SetZoneTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No__();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureCup_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_IsWithLift = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsWithLift();

  UaNodeId MultiFunctionPanParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature();

  UaNodeId MultiFunctionPanParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeProgram = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram();

  UaNodeId MultiFunctionPanParameterType_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute_EURange();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeStep_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep_EURange();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingStep = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep();

  UaNodeId MultiFunctionPanParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature_EURange();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram_EURange();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingStep_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeStep = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureBottom_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature_EURange();

  UaNodeId MultiFunctionPanParameterType_IsLidLocked = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsLidLocked();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureCup = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup();

  UaNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No__();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureBottom_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom_EURange();

  UaNodeId MultiFunctionPanParameterType_IsWithTilting = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsWithTilting();

  UaNodeId MultiFunctionPanParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No___EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingProgram = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram();

  UaNodeId MultiFunctionPanParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature_EURange();

  UaNodeId MultiFunctionPanParameterType_TimeRemainingStep_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep_EURange();

  UaNodeId MultiFunctionPanParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature();

  UaNodeId MultiFunctionPanParameterType_IsLidOpen = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsLidOpen();

  UaNodeId MultiFunctionPanParameterType_SetZoneTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No___EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No___EURange();

  UaNodeId MultiFunctionPanParameterType_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature();

  UaNodeId MultiFunctionPanParameterType_ActualPressureAbsolute = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute();

  UaNodeId MultiFunctionPanParameterType_MultiFunctionPanMode = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_MultiFunctionPanMode();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_CookingLevel();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureCup_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup_EURange();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram_EURange();

  UaNodeId MultiFunctionPanParameterType_SetProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_ActualTemperatureBottom = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom();

  UaNodeId MultiFunctionPanParameterType_SetZoneTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No___EURange();

  UaNodeId MultiFunctionPanParameterType_IsWithCleaning = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsWithCleaning();

  UaNodeId MultiFunctionPanParameterType_IsWithPressure = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_IsWithPressure();

  UaNodeId MultiFunctionPanParameterType_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute_EngineeringUnits();

  UaNodeId MultiFunctionPanParameterType_SpecialFunctionMode = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanParameterType_SpecialFunctionMode();

  UaNodeId PastaCookerParameterType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_TimeRemaining();

  UaNodeId PastaCookerParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetProcessTime_EURange();

  UaNodeId PastaCookerParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_ProgramMode();

  UaNodeId PastaCookerParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetTemperature();

  UaNodeId PastaCookerParameterType_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_CookingLevel();

  UaNodeId PastaCookerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetTemperature_EURange();

  UaNodeId PastaCookerParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId PastaCookerParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetProcessTime();

  UaNodeId PastaCookerParameterType_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SignalMode();

  UaNodeId PastaCookerParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_ActualTemperature_EURange();

  UaNodeId PastaCookerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetTemperature_EngineeringUnits();

  UaNodeId PastaCookerParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_ActualTemperature();

  UaNodeId PastaCookerParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_TimeRemaining_EngineeringUnits();

  UaNodeId PastaCookerParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_TimeRemaining_EURange();

  UaNodeId PastaCookerParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining();

  UaNodeId PressureCookingKettleParameterType_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute_EURange();

  UaNodeId PressureCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining_EURange();

  UaNodeId PressureCookingKettleParameterType_ActualPressureKettle = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle();

  UaNodeId PressureCookingKettleParameterType_IsSteamActive = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_IsSteamActive();

  UaNodeId PressureCookingKettleParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature_EURange();

  UaNodeId PressureCookingKettleParameterType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature();

  UaNodeId PressureCookingKettleParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature_EURange();

  UaNodeId PressureCookingKettleParameterType_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature();

  UaNodeId PressureCookingKettleParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature_EURange();

  UaNodeId PressureCookingKettleParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_IsLidLocked = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_IsLidLocked();

  UaNodeId PressureCookingKettleParameterType_ActualPressureKettle_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle_EURange();

  UaNodeId PressureCookingKettleParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ProgramMode();

  UaNodeId PressureCookingKettleParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_CookingLevel();

  UaNodeId PressureCookingKettleParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime_EURange();

  UaNodeId PressureCookingKettleParameterType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature_EURange();

  UaNodeId PressureCookingKettleParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_ActualPressureKettle_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature();

  UaNodeId PressureCookingKettleParameterType_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SignalMode();

  UaNodeId PressureCookingKettleParameterType_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime();

  UaNodeId PressureCookingKettleParameterType_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute_EngineeringUnits();

  UaNodeId PressureCookingKettleParameterType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature();

  UaNodeId PressureCookingKettleParameterType_ActualPressureAbsolute = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute();

  UaNodeId PressureCookingKettleParameterType_IsOpenExpressActive = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleParameterType_IsOpenExpressActive();

  UaNodeId TrayType_OperatingCounter_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_OperatingCounter_EURange();

  UaNodeId TrayType_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ProgramMode();

  UaNodeId TrayType_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_SetTemperature();

  UaNodeId TrayType_ActiveSince = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActiveSince();

  UaNodeId TrayType_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_SetTemperature_EURange();

  UaNodeId TrayType_ActiveSince_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActiveSince_EURange();

  UaNodeId TrayType_Name = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_Name();

  UaNodeId TrayType_OperatingCounter = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_OperatingCounter();

  UaNodeId TrayType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_SetTemperature_EngineeringUnits();

  UaNodeId TrayType_OperatingCounter_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_OperatingCounter_EngineeringUnits();

  UaNodeId TrayType_ActiveSince_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActiveSince_EngineeringUnits();

  UaNodeId TrayType_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActualTemperature_EURange();

  UaNodeId TrayType_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActualTemperature();

  UaNodeId TrayType_Type = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_Type();

  UaNodeId TrayType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initTrayType_ActualTemperature_EngineeringUnits();

  UaNodeId CommercialKitchenDeviceType_BatchInformation_OrderId = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_OrderId();

  UaNodeId CommercialKitchenDeviceType_DeviceClass = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_DeviceClass();

  UaNodeId CommercialKitchenDeviceType_BatchInformation_SystemTime = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_SystemTime();

  UaNodeId CommercialKitchenDeviceType_BatchInformation_LocalTime = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_LocalTime();

  UaNodeId CommercialKitchenDeviceType_DeviceLocationName = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_DeviceLocationName();

  UaNodeId CommercialKitchenDeviceType_BatchInformation_BatchId = CommercialKitchenEquipmentUaVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_BatchId();

  UaNodeId CoffeeMachineDeviceType_Parameters_TotalMix = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_TotalMix();

  UaNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_RecipeName_CoffeeType = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_CoffeeType();

  UaNodeId CoffeeMachineDeviceType_RecipeName_Container_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_Container_EnumStrings();

  UaNodeId CoffeeMachineDeviceType_RecipeName_Container = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_Container();

  UaNodeId CoffeeMachineDeviceType_RecipeName_CoffeeType_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_CoffeeType_EnumStrings();

  UaNodeId CoffeeMachineDeviceType_RecipeName_RcpType_EnumStrings = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_RcpType_EnumStrings();

  UaNodeId CoffeeMachineDeviceType_RecipeName_RcpType = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_RcpType();

  UaNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_BeverageSML = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSML();

  UaNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureSteam_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureSteam_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater_EURange();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater();

  UaNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater();

  UaNodeId CoffeeMachineDeviceType_Parameters_CurrentState = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_CurrentState();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureSteam = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureSteam();

  UaNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize_EURange();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount();

  UaNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_Parameters_SystemClean = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_SystemClean();

  UaNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount_EngineeringUnits();

  UaNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount_EURange();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EngineeringUnits();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature_EngineeringUnits();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_CombiSteamerMode = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_CombiSteamerMode();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EURange();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EURange();

  UaNodeId CombiSteamerDeviceType_IsWithExternalCoreTempSensor = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_IsWithExternalCoreTempSensor();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EURange();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EngineeringUnits();

  UaNodeId CombiSteamerDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_EnergySource();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No__();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No__();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_IsDoorOpen = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_IsDoorOpen();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EngineeringUnits();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram();

  UaNodeId CombiSteamerDeviceType_IsWithSousvideTempSensor = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_IsWithSousvideTempSensor();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature_EURange();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EngineeringUnits();

  UaNodeId CombiSteamerDeviceType_IsWithAutomaticCleaning = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_IsWithAutomaticCleaning();

  UaNodeId CombiSteamerDeviceType_IsWithInternalCoreTempSensor = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_IsWithInternalCoreTempSensor();

  UaNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EURange();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature_EURange();

  UaNodeId CookingKettleDeviceType_IsWithAgitator = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_IsWithAgitator();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature_EURange();

  UaNodeId CookingKettleDeviceType_CookingKettle_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_CookingLevel();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature();

  UaNodeId CookingKettleDeviceType_IsWithCooling = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_IsWithCooling();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining_EURange();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime();

  UaNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SignalMode();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature();

  UaNodeId CookingKettleDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_EnergySource();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature();

  UaNodeId CookingKettleDeviceType_CookingKettle_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ProgramMode();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature_EURange();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime_EURange();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EngineeringUnits();

  UaNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EURange();

  UaNodeId CookingZoneDeviceType_NominalVoltage_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_NominalVoltage_EURange();

  UaNodeId CookingZoneDeviceType_CookingZone__No___NominalPower_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower_EURange();

  UaNodeId CookingZoneDeviceType_NominalVoltage = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_NominalVoltage();

  UaNodeId CookingZoneDeviceType_IsWithPanDetection = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_IsWithPanDetection();

  UaNodeId CookingZoneDeviceType_NominalVoltage_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_NominalVoltage_EngineeringUnits();

  UaNodeId CookingZoneDeviceType_NumberOfPhases = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_NumberOfPhases();

  UaNodeId CookingZoneDeviceType_CookingZone__No___NominalPower_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower_EngineeringUnits();

  UaNodeId CookingZoneDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_EnergySource();

  UaNodeId CookingZoneDeviceType_CookingZone__No___NominalPower = CommercialKitchenEquipmentUaVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EURange();

  UaNodeId DishWashingMachineDeviceType_Parameters_FinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_FinalRinseTemperatureSetpointNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_OperationMode = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_OperationMode();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperatureNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_MainTankTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_MainTankTemperatureSetpointNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualPumpedFinalRinseTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualPumpedFinalRinseTemperatureNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualPreTankTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualPreTankTemperatureNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_PreTankTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_PreTankTemperatureSetpointNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EngineeringUnits();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualMainTankTemperatureNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualMainTankTemperatureNo();

  UaNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No__ = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No__();

  UaNodeId DishWashingMachineDeviceType_Parameters_PumpedFinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentUaVariableIdsInit.initDishWashingMachineDeviceType_Parameters_PumpedFinalRinseTemperatureSetpointNo();

  UaNodeId FryerDeviceType_FryerCup__No___SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime_EURange();

  UaNodeId FryerDeviceType_FryerCup__No___SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature_EURange();

  UaNodeId FryerDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_EnergySource();

  UaNodeId FryerDeviceType_FryerCup__No___ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___ProgramMode();

  UaNodeId FryerDeviceType_FryerCup__No___ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature();

  UaNodeId FryerDeviceType_IsWithLift = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_IsWithLift();

  UaNodeId FryerDeviceType_FryerCup__No___ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature_EngineeringUnits();

  UaNodeId FryerDeviceType_FryerCup__No___SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SignalMode();

  UaNodeId FryerDeviceType_FryerCup__No___TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining();

  UaNodeId FryerDeviceType_FryerCup__No___ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature_EURange();

  UaNodeId FryerDeviceType_FryerCup__No___TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining_EURange();

  UaNodeId FryerDeviceType_FryerCup__No___SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime_EngineeringUnits();

  UaNodeId FryerDeviceType_FryerCup__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature_EngineeringUnits();

  UaNodeId FryerDeviceType_FryerCup__No___SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime();

  UaNodeId FryerDeviceType_FryerCup__No___SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature();

  UaNodeId FryerDeviceType_FryerCup__No___TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining_EngineeringUnits();

  UaNodeId FryingAndGrillingDeviceType_GrillingZone__No___IsWithPlaten = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingDeviceType_GrillingZone__No___IsWithPlaten();

  UaNodeId FryingAndGrillingDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initFryingAndGrillingDeviceType_EnergySource();

  UaNodeId FryingPanDeviceType_FryingPan_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining();

  UaNodeId FryingPanDeviceType_FryingPan_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature_EngineeringUnits();

  UaNodeId FryingPanDeviceType_FryingPan_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_CookingLevel();

  UaNodeId FryingPanDeviceType_FryingPan_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining_EURange();

  UaNodeId FryingPanDeviceType_FryingPan_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining_EngineeringUnits();

  UaNodeId FryingPanDeviceType_FryingPan_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime_EngineeringUnits();

  UaNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature_EngineeringUnits();

  UaNodeId FryingPanDeviceType_FryingPan_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature_EURange();

  UaNodeId FryingPanDeviceType_FryingPan_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature();

  UaNodeId FryingPanDeviceType_FryingPan_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature_EURange();

  UaNodeId FryingPanDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_EnergySource();

  UaNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature();

  UaNodeId FryingPanDeviceType_FryingPan_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ProgramMode();

  UaNodeId FryingPanDeviceType_FryingPan_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature_EngineeringUnits();

  UaNodeId FryingPanDeviceType_FryingPan_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature();

  UaNodeId FryingPanDeviceType_FryingPan_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SignalMode();

  UaNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature_EURange();

  UaNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature_EngineeringUnits();

  UaNodeId FryingPanDeviceType_IsWithPressure = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_IsWithPressure();

  UaNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature_EURange();

  UaNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature();

  UaNodeId FryingPanDeviceType_FryingPan_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime();

  UaNodeId FryingPanDeviceType_FryingPan_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime_EURange();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_OperatingMode = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_OperatingMode();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_IsDoorOpen = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_IsDoorOpen();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EURange();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EURange();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EURange();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EngineeringUnits();

  UaNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___MultiFunctionPanMode = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___MultiFunctionPanMode();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EURange();

  UaNodeId MultiFunctionPanDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_EnergySource();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EURange();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EngineeringUnits();

  UaNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom = CommercialKitchenEquipmentUaVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom();

  UaNodeId OvenDeviceType_Chamber__No___OperationMode = CommercialKitchenEquipmentUaVariableIdsInit.initOvenDeviceType_Chamber__No___OperationMode();

  UaNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature_EURange();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime_EURange();

  UaNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime_EngineeringUnits();

  UaNodeId PastaCookerDeviceType_PastaCooker_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ProgramMode();

  UaNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining_EngineeringUnits();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature_EURange();

  UaNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining_EURange();

  UaNodeId PastaCookerDeviceType_PastaCooker_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SignalMode();

  UaNodeId PastaCookerDeviceType_PastaCooker_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_CookingLevel();

  UaNodeId PastaCookerDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_EnergySource();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature_EngineeringUnits();

  UaNodeId PastaCookerDeviceType_IsWithLift = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_IsWithLift();

  UaNodeId PastaCookerDeviceType_PastaCooker_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature();

  UaNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature();

  UaNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsLidLocked = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsLidLocked();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SignalMode = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SignalMode();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ProgramMode();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EURange();

  UaNodeId PressureCookingKettleDeviceType_EnergySource = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_EnergySource();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsOpenExpressActive = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsOpenExpressActive();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EURange();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_CookingLevel = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_CookingLevel();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EngineeringUnits();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsSteamActive = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsSteamActive();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle();

  UaNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EngineeringUnits();

  UaNodeId ServeryCounterDeviceType_Tray__No___Type = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___Type();

  UaNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter();

  UaNodeId ServeryCounterDeviceType_Tray__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature_EngineeringUnits();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActiveSince_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince_EURange();

  UaNodeId ServeryCounterDeviceType_Tray__No___Name = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___Name();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature_EngineeringUnits();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActiveSince_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince_EngineeringUnits();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature_EURange();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActiveSince = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince();

  UaNodeId ServeryCounterDeviceType_Tray__No___SetTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature();

  UaNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature();

  UaNodeId ServeryCounterDeviceType_Tray__No___ProgramMode = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___ProgramMode();

  UaNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter_EngineeringUnits = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter_EngineeringUnits();

  UaNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter_EURange();

  UaNodeId ServeryCounterDeviceType_Tray__No___SetTemperature_EURange = CommercialKitchenEquipmentUaVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature_EURange();

  static Set<UaNodeId> allVariableIdentifiers() {
    return InternalCommercialKitchenEquipmentUaVariableIdsHelper.ALL_VARIABLE_IDENTIFIERS;
  }
}
