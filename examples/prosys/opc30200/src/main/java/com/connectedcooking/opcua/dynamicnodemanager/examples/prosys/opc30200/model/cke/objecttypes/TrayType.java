// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.objecttypes;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.TrayModeEnumeration;
import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.TrayTypeEnumeration;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.nodes.UaProperty;
import com.prosysopc.ua.types.opcua.AnalogItemType;
import com.prosysopc.ua.types.opcua.BaseDataVariableType;
import java.lang.Float;
import java.lang.Integer;
import java.lang.String;

/**
 * Generated on 2025-04-16 18:27:26
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/CommercialKitchenEquipment/;i=1027")
public interface TrayType extends KitchenDeviceParameterType {
  String NAME = "Name";

  String ACTIVE_SINCE = "ActiveSince";

  String ACTUAL_TEMPERATURE = "ActualTemperature";

  String OPERATING_COUNTER = "OperatingCounter";

  String PROGRAM_MODE = "ProgramMode";

  String SET_TEMPERATURE = "SetTemperature";

  String TYPE = "Type";

  @Mandatory
  UaProperty getNameNode();

  @Mandatory
  String getName();

  @Mandatory
  void setName(String value) throws StatusException;

  @Mandatory
  AnalogItemType getActiveSinceNode();

  @Mandatory
  Integer getActiveSince();

  @Mandatory
  void setActiveSince(Integer value) throws StatusException;

  @Mandatory
  AnalogItemType getActualTemperatureNode();

  @Mandatory
  Float getActualTemperature();

  @Mandatory
  void setActualTemperature(Float value) throws StatusException;

  @Mandatory
  AnalogItemType getOperatingCounterNode();

  @Mandatory
  Integer getOperatingCounter();

  @Mandatory
  void setOperatingCounter(Integer value) throws StatusException;

  @Mandatory
  BaseDataVariableType getProgramModeNode();

  @Mandatory
  TrayModeEnumeration getProgramMode();

  @Mandatory
  void setProgramMode(TrayModeEnumeration value) throws StatusException;

  @Mandatory
  AnalogItemType getSetTemperatureNode();

  @Mandatory
  Float getSetTemperature();

  @Mandatory
  void setSetTemperature(Float value) throws StatusException;

  @Mandatory
  BaseDataVariableType getTypeNode();

  @Mandatory
  TrayTypeEnumeration getType();

  @Mandatory
  void setType(TrayTypeEnumeration value) throws StatusException;
}
