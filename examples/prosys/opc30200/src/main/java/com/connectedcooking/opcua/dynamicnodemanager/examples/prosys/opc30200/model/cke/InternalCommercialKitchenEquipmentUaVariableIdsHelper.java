// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.UaNodeId;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * Generated on 2024-06-17 14:43:51
 */
class InternalCommercialKitchenEquipmentUaVariableIdsHelper {
  public static final Set<UaNodeId> ALL_VARIABLE_IDENTIFIERS;

  static {
    Set<UaNodeId> allIds = new HashSet<UaNodeId>();
    allIds.add(CommercialKitchenEquipmentUaVariableIds.BeverageSMLEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CurrentStateEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.EnergySourceEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.GrillingZoneStateEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.HygieneModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.OperatingModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.OperationModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PlatenPositionStateEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ProgramModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.SignalModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.SpecialCookingModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.SpecialFunctionModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.StatusEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayModeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayTypeEnumeration_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.BatchInformationType_OrderId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.BatchInformationType_BatchId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.BatchInformationType_LocalTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.BatchInformationType_SystemTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.KitchenDeviceHAConfigType_HistoryDuration);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.KitchenDeviceHAConfigType_SamplingInterval);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.KitchenDeviceParameterType_ProgramId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.KitchenDeviceParameterType_ProgramName);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.KitchenDeviceParameterType_ProgramUId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualFanSpeed__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualCoreTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBoilerTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBottomTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBottomTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_OperationMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBoilerTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetFanSpeed);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualHumidity__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_IsProgramEnd);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBottomTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetTopTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetProcessTimeProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualTopTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetChamberTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetTopTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBoilerTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetHumidity_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualChamberTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetProcessTimeProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBottomTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetFanSpeed_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualTopTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualFanSpeed__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetHumidity);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualCoreTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_IsReadyToStart);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBoilerTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBoilerTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetChamberTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetProcessTimeProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualChamberTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualTopTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualCoreTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetHumidity_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetChamberTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualChamberTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetBottomTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_IsDoorOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBottomTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetTopTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetFanSpeed_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualBoilerTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualFanSpeed__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualHumidity__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ChamberType_ActualHumidity__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerPressureWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_CurrentState);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempSteam_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_GrinderRuntime__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_GrinderRuntime__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempSteam_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerPressureWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerPressureSteam_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerPressureSteam);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_TotalBrew__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_SystemClean);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_GrinderRuntime__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempSteam);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerTempWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_TotalMix);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineParameterType_BoilerPressureWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_MilkAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_FoamAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_MilkAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_BeverageSize);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_FoamAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_FoamAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_BeverageSML);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_MilkAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_Container_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_CoffeeType);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_GroundsAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_PowderAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_PowderAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_BeverageSize_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_RcpType_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_BeverageSize_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_RcpType);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_CoffeeType_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_PowderAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineRecipeParameterType_Container);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualInternalCoreTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetInternalCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualExternalCoreTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetHumidity);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualExternalCoreTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualHumidity_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualHumidity_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualExternalCoreTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualTemperatureChamber__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingStep_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualInternalCoreTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SpecialCookingMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetExternalCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetExternalCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_IsEnergySavingActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_CombiSteamerMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_IsLoaActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_IsDoorOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetHumidity_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetInternalCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualTemperatureChamber__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetInternalCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualInternalCoreTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingStep_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_IsSteamExhaustSystemActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeStep_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeStep_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetProcessTimeProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetHumidity_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualTemperatureChamber__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_TimeRemainingProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_SetExternalCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerParameterType_ActualHumidity);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleParameterType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetPowerValue_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualPower_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_NominalPower_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetPowerValue);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_NominalPower);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_CookingZoneName);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualPower_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualPower);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_IsPanDetected);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_SetPowerValue_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_NominalPower_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_CurrentState);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ProductGroup);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualMainTankTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ProductType);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualFinalRinseTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualMainTankTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_HygieneSetpoint);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_HygieneMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualHygieneValue);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_OperationMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPreTankTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_PreTankTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_MainTankTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPreTankTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_IsLiftUp);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualGrillTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetGrillTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualGrillTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_GrillingZoneName);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualPlatenTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetPlatenTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_IsWithPlaten);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_PlatenPositionState);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetPlatenTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualGrillTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetGrillTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetPlatenTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_RemainingProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_RemainingProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_RemainingProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualPlatenTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_ActualPlatenTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_SetGrillTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingParameterType_CurrentState);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_IsLidLocked);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualPressurePan);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualPressurePan_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualPressurePan_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_WaterFillTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastFreezeTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastFreezeTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastHarvestTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_Temperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_Temperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_Status);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastHarvestTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastHarvestTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_WaterFillTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_LastFreezeTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_Temperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.IceMachineParameterType_WaterFillTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_IsDoorOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_MicrowaveEnergy_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_CookingStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_FanSpeed_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_MicrowaveEnergy);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTimeStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_FanSpeed);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_ActualTemperatureChamber);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_MicrowaveEnergy_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_OperatingMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_RemainingProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenParameterType_FanSpeed_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureCup_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeStep_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualZoneTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureBottom_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsLidLocked);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsLidOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetZoneTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureCup_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeStep_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualPressureAbsolute_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetZoneTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsWithTilting);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeStep);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualZoneTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingStep_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SpecialFunctionMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureCup);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetProcessTimeProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsWithLift);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureBottom);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsWithCleaning);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_IsWithPressure);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualZoneTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_TimeRemainingStep_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualPressureAbsolute_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualTemperatureBottom_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualPressureAbsolute);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_MultiFunctionPanMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_SetZoneTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanParameterType_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerParameterType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureAbsolute);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureKettle_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureKettle_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureKettle);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureAbsolute_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_IsLidLocked);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualPressureAbsolute_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_IsOpenExpressActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_IsSteamActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleParameterType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_OperatingCounter_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_Type);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_Name);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActiveSince);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActiveSince_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_OperatingCounter);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_OperatingCounter_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_ActiveSince_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.TrayType_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_BatchInformation_LocalTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_BatchInformation_OrderId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_DeviceLocationName);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_DeviceClass);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_BatchInformation_BatchId);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CommercialKitchenDeviceType_BatchInformation_SystemTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_BeverageSize_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_BeverageSize_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerTempWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_CurrentState);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_MilkAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerPressureSteam);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_SystemClean);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerTempWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_FoamAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_CoffeeType_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_RcpType_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_PowderAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerTempWater_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_CoffeeType);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_MilkAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_Container);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerPressureSteam_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_BeverageSize);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_BoilerPressureWater);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_RcpType);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_FoamAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_FoamAmount_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_PowderAmount_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_MilkAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_GroundsWater_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_Container_EnumStrings);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_BeverageSML);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_RecipeName_PowderAmount);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CoffeeMachineDeviceType_Parameters_TotalMix);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_IsWithAutomaticCleaning);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_CombiSteamerMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_IsDoorOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_IsWithExternalCoreTempSensor);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_IsWithSousvideTempSensor);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_IsWithInternalCoreTempSensor);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_IsWithCooling);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_IsWithAgitator);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingKettleDeviceType_CookingKettle_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_NominalVoltage_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_CookingZone__No___NominalPower_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_NominalVoltage);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_CookingZone__No___NominalPower_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_IsWithPanDetection);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_NominalVoltage_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_NumberOfPhases);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.CookingZoneDeviceType_CookingZone__No___NominalPower);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_OperationMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualPreTankTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualPumpedFinalRinseTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_PreTankTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualMainTankTemperatureNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_MainTankTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_FinalRinseTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No__);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.DishWashingMachineDeviceType_Parameters_PumpedFinalRinseTemperatureSetpointNo);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_IsWithLift);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryerDeviceType_FryerCup__No___ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingDeviceType_GrillingZone__No___IsWithPlaten);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingAndGrillingDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_IsWithPressure);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.FryingPanDeviceType_FryingPan_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_OperatingMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_IsDoorOpen);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___MultiFunctionPanMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.OvenDeviceType_Chamber__No___OperationMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_IsWithLift);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PastaCookerDeviceType_PastaCooker_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_IsOpenExpressActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_EnergySource);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_IsLidLocked);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_IsSteamActive);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_CookingLevel);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SignalMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.PressureCookingKettleDeviceType_PressureCookingKettle_ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___SetTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___Type);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActiveSince);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___OperatingCounter_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___SetTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___OperatingCounter);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___SetTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActualTemperature);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActiveSince_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActualTemperature_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___OperatingCounter_EURange);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___Name);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActualTemperature_EngineeringUnits);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ProgramMode);
    allIds.add(CommercialKitchenEquipmentUaVariableIds.ServeryCounterDeviceType_Tray__No___ActiveSince_EngineeringUnits);
    ALL_VARIABLE_IDENTIFIERS = Collections.unmodifiableSet(allIds);
  }
}
