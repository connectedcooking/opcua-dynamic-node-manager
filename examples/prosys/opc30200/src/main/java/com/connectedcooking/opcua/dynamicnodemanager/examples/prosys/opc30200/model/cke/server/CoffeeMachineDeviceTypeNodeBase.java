// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.server;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.CoffeeMachineDeviceType;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.server.GeneratedNodeInitializer;
import com.prosysopc.ua.server.NodeManagerUaNode;
import com.prosysopc.ua.server.ServiceContext;
import com.prosysopc.ua.stack.builtintypes.DiagnosticInfo;
import com.prosysopc.ua.stack.builtintypes.LocalizedText;
import com.prosysopc.ua.stack.builtintypes.NodeId;
import com.prosysopc.ua.stack.builtintypes.QualifiedName;
import com.prosysopc.ua.stack.builtintypes.StatusCode;
import com.prosysopc.ua.stack.builtintypes.Variant;
import java.lang.Override;

/**
 * Generated on 2022-10-10 10:21:34
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/CommercialKitchenEquipment/;i=1024")
public abstract class CoffeeMachineDeviceTypeNodeBase extends CommercialKitchenDeviceTypeNode implements CoffeeMachineDeviceType {
  private static GeneratedNodeInitializer<CoffeeMachineDeviceTypeNode> f_coffeeMachineDeviceTypeNodeInitializer;

  protected CoffeeMachineDeviceTypeNodeBase(NodeManagerUaNode nodeManager, NodeId nodeId,
      QualifiedName browseName, LocalizedText displayName) {
    super(nodeManager, nodeId, browseName, displayName);
  }

  @Override
  public void afterCreate() {
    super.afterCreate();

    // Call afterCreate for each sub-node (if the node has any)
    callAfterCreateIfExists(getParametersNode());
    GeneratedNodeInitializer<CoffeeMachineDeviceTypeNode> impl = getCoffeeMachineDeviceTypeNodeInitializer();
    if(impl != null) {
      impl.init((CoffeeMachineDeviceTypeNode)this);
    }
  }

  public static GeneratedNodeInitializer<CoffeeMachineDeviceTypeNode> getCoffeeMachineDeviceTypeNodeInitializer() {
    return f_coffeeMachineDeviceTypeNodeInitializer;
  }

  public static void setCoffeeMachineDeviceTypeNodeInitializer(GeneratedNodeInitializer<CoffeeMachineDeviceTypeNode> f_coffeeMachineDeviceTypeNodeInitializerNewValue) {
    f_coffeeMachineDeviceTypeNodeInitializer=f_coffeeMachineDeviceTypeNodeInitializerNewValue;
  }

  @Mandatory
  @Override
  public CoffeeMachineParameterTypeNode getParametersNode() {
    QualifiedName browseName = getQualifiedName("http://opcfoundation.org/UA/CommercialKitchenEquipment/", "Parameters");
    return (CoffeeMachineParameterTypeNode) getComponent(browseName);
  }

  @Override
  public Variant[] callMethod(ServiceContext serviceContext, NodeId methodId,
      Variant[] inputArguments, StatusCode[] inputArgumentResults,
      DiagnosticInfo[] inputArgumentDiagnosticInfos) throws StatusException {
    return super.callMethod(serviceContext, methodId, inputArguments, inputArgumentResults, inputArgumentDiagnosticInfos);
  }
}
