// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.UaNodeId;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * Generated on 2025-04-16 18:27:26
 */
class InternalCommercialKitchenEquipmentUaObjectTypeIdsHelper {
  public static final Set<UaNodeId> ALL_OBJECTTYPE_IDENTIFIERS;

  static {
    Set<UaNodeId> allIds = new HashSet<UaNodeId>();
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.BatchInformationType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.KitchenDeviceHAConfigType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.KitchenDeviceParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.ChamberType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CoffeeMachineParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CoffeeMachineRecipeParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CombiSteamerParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CookingKettleParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CookingZoneParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.DishWashingMachineProgramParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryerParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryingAndGrillingParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryingPanParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.IceMachineParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.MicrowaveCombiOvenParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.MultiFunctionPanParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.PastaCookerParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.PressureCookingKettleParameterType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.TrayType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CommercialKitchenDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CoffeeMachineDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CombiSteamerDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CookingKettleDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.CookingZoneDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.DishWashingMachineDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryerDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryingAndGrillingDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.FryingPanDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.IceMachineDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.MicrowaveCombiOvenDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.MultiFunctionPanDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.OvenDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.PastaCookerDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.PressureCookingKettleDeviceType);
    allIds.add(CommercialKitchenEquipmentUaObjectTypeIds.ServeryCounterDeviceType);
    ALL_OBJECTTYPE_IDENTIFIERS = Collections.unmodifiableSet(allIds);
  }
}
