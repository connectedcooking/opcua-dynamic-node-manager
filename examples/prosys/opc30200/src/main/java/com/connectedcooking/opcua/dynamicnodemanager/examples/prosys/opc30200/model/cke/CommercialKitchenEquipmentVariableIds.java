// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.stack.builtintypes.ExpandedNodeId;

/**
 * Generated on 2022-10-10 10:21:34
 */
public interface CommercialKitchenEquipmentVariableIds {
  ExpandedNodeId BeverageSMLEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initBeverageSMLEnumeration_EnumStrings();

  ExpandedNodeId ChamberModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initChamberModeEnumeration_EnumStrings();

  ExpandedNodeId CoffeeMachineModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineModeEnumeration_EnumStrings();

  ExpandedNodeId CombiSteamerModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerModeEnumeration_EnumStrings();

  ExpandedNodeId CookingKettleModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleModeEnumeration_EnumStrings();

  ExpandedNodeId CurrentStateEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCurrentStateEnumeration_EnumStrings();

  ExpandedNodeId EnergySourceEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initEnergySourceEnumeration_EnumStrings();

  ExpandedNodeId FryerModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initFryerModeEnumeration_EnumStrings();

  ExpandedNodeId FryingPanModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initFryingPanModeEnumeration_EnumStrings();

  ExpandedNodeId GrillingZoneStateEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initGrillingZoneStateEnumeration_EnumStrings();

  ExpandedNodeId HygieneModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initHygieneModeEnumeration_EnumStrings();

  ExpandedNodeId MultiFunctionPanModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanModeEnumeration_EnumStrings();

  ExpandedNodeId OperatingModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initOperatingModeEnumeration_EnumStrings();

  ExpandedNodeId OperationModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initOperationModeEnumeration_EnumStrings();

  ExpandedNodeId PastaCookerModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerModeEnumeration_EnumStrings();

  ExpandedNodeId PlatenPositionStateEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initPlatenPositionStateEnumeration_EnumStrings();

  ExpandedNodeId PressureCookingKettleModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleModeEnumeration_EnumStrings();

  ExpandedNodeId ProgramModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initProgramModeEnumeration_EnumStrings();

  ExpandedNodeId SignalModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initSignalModeEnumeration_EnumStrings();

  ExpandedNodeId SpecialCookingModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initSpecialCookingModeEnumeration_EnumStrings();

  ExpandedNodeId SpecialFunctionModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initSpecialFunctionModeEnumeration_EnumStrings();

  ExpandedNodeId StatusEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initStatusEnumeration_EnumStrings();

  ExpandedNodeId TrayModeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initTrayModeEnumeration_EnumStrings();

  ExpandedNodeId TrayTypeEnumeration_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initTrayTypeEnumeration_EnumStrings();

  ExpandedNodeId BatchInformationType_SystemTime = CommercialKitchenEquipmentVariableIdsInit.initBatchInformationType_SystemTime();

  ExpandedNodeId BatchInformationType_OrderId = CommercialKitchenEquipmentVariableIdsInit.initBatchInformationType_OrderId();

  ExpandedNodeId BatchInformationType_BatchId = CommercialKitchenEquipmentVariableIdsInit.initBatchInformationType_BatchId();

  ExpandedNodeId BatchInformationType_LocalTime = CommercialKitchenEquipmentVariableIdsInit.initBatchInformationType_LocalTime();

  ExpandedNodeId KitchenDeviceHAConfigType_HistoryDuration = CommercialKitchenEquipmentVariableIdsInit.initKitchenDeviceHAConfigType_HistoryDuration();

  ExpandedNodeId KitchenDeviceHAConfigType_SamplingInterval = CommercialKitchenEquipmentVariableIdsInit.initKitchenDeviceHAConfigType_SamplingInterval();

  ExpandedNodeId KitchenDeviceParameterType_ProgramName = CommercialKitchenEquipmentVariableIdsInit.initKitchenDeviceParameterType_ProgramName();

  ExpandedNodeId KitchenDeviceParameterType_ProgramUId = CommercialKitchenEquipmentVariableIdsInit.initKitchenDeviceParameterType_ProgramUId();

  ExpandedNodeId KitchenDeviceParameterType_ProgramId = CommercialKitchenEquipmentVariableIdsInit.initKitchenDeviceParameterType_ProgramId();

  ExpandedNodeId ChamberType_SetHumidity_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetHumidity_EURange();

  ExpandedNodeId ChamberType_ActualTopTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualTopTemperature__No__();

  ExpandedNodeId ChamberType_ActualTopTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualTopTemperature__No___EURange();

  ExpandedNodeId ChamberType_SetChamberTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetChamberTemperature_EngineeringUnits();

  ExpandedNodeId ChamberType_OperationMode = CommercialKitchenEquipmentVariableIdsInit.initChamberType_OperationMode();

  ExpandedNodeId ChamberType_SetHumidity_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetHumidity_EngineeringUnits();

  ExpandedNodeId ChamberType_ActualChamberTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualChamberTemperature__No___EngineeringUnits();

  ExpandedNodeId ChamberType_ActualBottomTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBottomTemperature__No__();

  ExpandedNodeId ChamberType_ActualBoilerTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBoilerTemperature__No__();

  ExpandedNodeId ChamberType_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetCoreTemperature();

  ExpandedNodeId ChamberType_ActualBoilerTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBoilerTemperature__No___EngineeringUnits();

  ExpandedNodeId ChamberType_SetFanSpeed = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetFanSpeed();

  ExpandedNodeId ChamberType_ActualBottomTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBottomTemperature__No___EngineeringUnits();

  ExpandedNodeId ChamberType_SetChamberTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetChamberTemperature_EURange();

  ExpandedNodeId ChamberType_ActualBottomTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBottomTemperature__No___EURange();

  ExpandedNodeId ChamberType_SetBottomTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBottomTemperature_EngineeringUnits();

  ExpandedNodeId ChamberType_SetTopTemperature = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetTopTemperature();

  ExpandedNodeId ChamberType_SetChamberTemperature = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetChamberTemperature();

  ExpandedNodeId ChamberType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetProcessTimeProgram_EngineeringUnits();

  ExpandedNodeId ChamberType_SetFanSpeed_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetFanSpeed_EURange();

  ExpandedNodeId ChamberType_SetTopTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetTopTemperature_EngineeringUnits();

  ExpandedNodeId ChamberType_SetBoilerTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBoilerTemperature_EngineeringUnits();

  ExpandedNodeId ChamberType_SetBoilerTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBoilerTemperature_EURange();

  ExpandedNodeId ChamberType_SetTopTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetTopTemperature_EURange();

  ExpandedNodeId ChamberType_IsReadyToStart = CommercialKitchenEquipmentVariableIdsInit.initChamberType_IsReadyToStart();

  ExpandedNodeId ChamberType_ActualCoreTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualCoreTemperature__No__();

  ExpandedNodeId ChamberType_SetBottomTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBottomTemperature_EURange();

  ExpandedNodeId ChamberType_ActualChamberTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualChamberTemperature__No___EURange();

  ExpandedNodeId ChamberType_ActualFanSpeed__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualFanSpeed__No__();

  ExpandedNodeId ChamberType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_TimeRemaining_EURange();

  ExpandedNodeId ChamberType_ActualCoreTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualCoreTemperature__No___EURange();

  ExpandedNodeId ChamberType_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetCoreTemperature_EURange();

  ExpandedNodeId ChamberType_SetFanSpeed_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetFanSpeed_EngineeringUnits();

  ExpandedNodeId ChamberType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetProcessTimeProgram_EURange();

  ExpandedNodeId ChamberType_SetProcessTimeProgram = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetProcessTimeProgram();

  ExpandedNodeId ChamberType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId ChamberType_IsDoorOpen = CommercialKitchenEquipmentVariableIdsInit.initChamberType_IsDoorOpen();

  ExpandedNodeId ChamberType_ActualCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualCoreTemperature__No___EngineeringUnits();

  ExpandedNodeId ChamberType_ActualHumidity__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualHumidity__No___EURange();

  ExpandedNodeId ChamberType_ActualFanSpeed__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualFanSpeed__No___EngineeringUnits();

  ExpandedNodeId ChamberType_ActualTopTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualTopTemperature__No___EngineeringUnits();

  ExpandedNodeId ChamberType_ActualFanSpeed__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualFanSpeed__No___EURange();

  ExpandedNodeId ChamberType_ActualHumidity__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualHumidity__No___EngineeringUnits();

  ExpandedNodeId ChamberType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initChamberType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId ChamberType_SetBoilerTemperature = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBoilerTemperature();

  ExpandedNodeId ChamberType_ActualBoilerTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualBoilerTemperature__No___EURange();

  ExpandedNodeId ChamberType_ActualHumidity__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualHumidity__No__();

  ExpandedNodeId ChamberType_SetBottomTemperature = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetBottomTemperature();

  ExpandedNodeId ChamberType_ActualChamberTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initChamberType_ActualChamberTemperature__No__();

  ExpandedNodeId ChamberType_IsProgramEnd = CommercialKitchenEquipmentVariableIdsInit.initChamberType_IsProgramEnd();

  ExpandedNodeId ChamberType_SetHumidity = CommercialKitchenEquipmentVariableIdsInit.initChamberType_SetHumidity();

  ExpandedNodeId ChamberType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initChamberType_TimeRemaining();

  ExpandedNodeId CoffeeMachineParameterType_BoilerPressureWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater();

  ExpandedNodeId CoffeeMachineParameterType_CurrentState = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_CurrentState();

  ExpandedNodeId CoffeeMachineParameterType_BoilerPressureWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater_EURange();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempSteam_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam_EURange();

  ExpandedNodeId CoffeeMachineParameterType_BoilerPressureSteam_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureSteam_EURange();

  ExpandedNodeId CoffeeMachineParameterType_BoilerPressureSteam = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureSteam();

  ExpandedNodeId CoffeeMachineParameterType_TotalBrew__No__ = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_TotalBrew__No__();

  ExpandedNodeId CoffeeMachineParameterType_GrinderRuntime__No__ = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No__();

  ExpandedNodeId CoffeeMachineParameterType_TotalMix = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_TotalMix();

  ExpandedNodeId CoffeeMachineParameterType_GrinderRuntime__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No___EngineeringUnits();

  ExpandedNodeId CoffeeMachineParameterType_BoilerPressureWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerPressureWater_EURange();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempSteam_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam_EngineeringUnits();

  ExpandedNodeId CoffeeMachineParameterType_SystemClean = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_SystemClean();

  ExpandedNodeId CoffeeMachineParameterType_BoilerTempSteam = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_BoilerTempSteam();

  ExpandedNodeId CoffeeMachineParameterType_GrinderRuntime__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineParameterType_GrinderRuntime__No___EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_PowderAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount();

  ExpandedNodeId CoffeeMachineRecipeParameterType_BeverageSize = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize();

  ExpandedNodeId CoffeeMachineRecipeParameterType_Container = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_Container();

  ExpandedNodeId CoffeeMachineRecipeParameterType_RcpType = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_RcpType();

  ExpandedNodeId CoffeeMachineRecipeParameterType_PowderAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount_EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount_EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_BeverageSML = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSML();

  ExpandedNodeId CoffeeMachineRecipeParameterType_FoamAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_FoamAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount();

  ExpandedNodeId CoffeeMachineRecipeParameterType_RcpType_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_RcpType_EnumStrings();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_FoamAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_FoamAmount_EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_MilkAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount();

  ExpandedNodeId CoffeeMachineRecipeParameterType_CoffeeType_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_CoffeeType_EnumStrings();

  ExpandedNodeId CoffeeMachineRecipeParameterType_BeverageSize_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_MilkAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater_EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_Container_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_Container_EnumStrings();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsWater();

  ExpandedNodeId CoffeeMachineRecipeParameterType_CoffeeType = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_CoffeeType();

  ExpandedNodeId CoffeeMachineRecipeParameterType_GroundsAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_GroundsAmount();

  ExpandedNodeId CoffeeMachineRecipeParameterType_MilkAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_MilkAmount_EURange();

  ExpandedNodeId CoffeeMachineRecipeParameterType_PowderAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_PowderAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineRecipeParameterType_BeverageSize_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineRecipeParameterType_BeverageSize_EURange();

  ExpandedNodeId CombiSteamerParameterType_ActualTemperatureChamber__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No___EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingStep = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep();

  ExpandedNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No__();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No__();

  ExpandedNodeId CombiSteamerParameterType_SetInternalCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature();

  ExpandedNodeId CombiSteamerParameterType_SetExternalCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature();

  ExpandedNodeId CombiSteamerParameterType_SetHumidity = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetHumidity();

  ExpandedNodeId CombiSteamerParameterType_SetExternalCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_IsEnergySavingActive = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_IsEnergySavingActive();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingStep_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram_EURange();

  ExpandedNodeId CombiSteamerParameterType_ActualTemperatureChamber__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No___EURange();

  ExpandedNodeId CombiSteamerParameterType_IsSteamExhaustSystemActive = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_IsSteamExhaustSystemActive();

  ExpandedNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No___EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_ActualTemperatureChamber__No__ = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualTemperatureChamber__No__();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingProgram = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram();

  ExpandedNodeId CombiSteamerParameterType_ActualHumidity_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualHumidity_EURange();

  ExpandedNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No___EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_SetHumidity_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetHumidity_EURange();

  ExpandedNodeId CombiSteamerParameterType_SetExternalCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetExternalCoreTemperature_EURange();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingStep_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingStep_EURange();

  ExpandedNodeId CombiSteamerParameterType_IsDoorOpen = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_IsDoorOpen();

  ExpandedNodeId CombiSteamerParameterType_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_TimeRemainingProgram_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_CombiSteamerMode = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_CombiSteamerMode();

  ExpandedNodeId CombiSteamerParameterType_SetHumidity_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetHumidity_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_ActualHumidity = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualHumidity();

  ExpandedNodeId CombiSteamerParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetTemperature();

  ExpandedNodeId CombiSteamerParameterType_ActualExternalCoreTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualExternalCoreTemperature__No___EURange();

  ExpandedNodeId CombiSteamerParameterType_IsLoaActive = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_IsLoaActive();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram_EURange();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeProgram = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeProgram();

  ExpandedNodeId CombiSteamerParameterType_SetInternalCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature_EURange();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeStep = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep();

  ExpandedNodeId CombiSteamerParameterType_SetInternalCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetInternalCoreTemperature_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeStep_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep_EURange();

  ExpandedNodeId CombiSteamerParameterType_ActualInternalCoreTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualInternalCoreTemperature__No___EURange();

  ExpandedNodeId CombiSteamerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetTemperature_EURange();

  ExpandedNodeId CombiSteamerParameterType_SetProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SetProcessTimeStep_EngineeringUnits();

  ExpandedNodeId CombiSteamerParameterType_SpecialCookingMode = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_SpecialCookingMode();

  ExpandedNodeId CombiSteamerParameterType_ActualHumidity_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerParameterType_ActualHumidity_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetProcessTime();

  ExpandedNodeId CookingKettleParameterType_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature();

  ExpandedNodeId CookingKettleParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetTemperature();

  ExpandedNodeId CookingKettleParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature_EURange();

  ExpandedNodeId CookingKettleParameterType_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SignalMode();

  ExpandedNodeId CookingKettleParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_TimeRemaining_EURange();

  ExpandedNodeId CookingKettleParameterType_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetCoreTemperature();

  ExpandedNodeId CookingKettleParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualTemperature();

  ExpandedNodeId CookingKettleParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ProgramMode();

  ExpandedNodeId CookingKettleParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualTemperature_EURange();

  ExpandedNodeId CookingKettleParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature_EURange();

  ExpandedNodeId CookingKettleParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetTemperature_EURange();

  ExpandedNodeId CookingKettleParameterType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_TimeRemaining();

  ExpandedNodeId CookingKettleParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_SetProcessTime_EURange();

  ExpandedNodeId CookingKettleParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleParameterType_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleParameterType_CookingLevel();

  ExpandedNodeId CookingZoneParameterType_ActualPower = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualPower();

  ExpandedNodeId CookingZoneParameterType_SetPowerValue_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetPowerValue_EURange();

  ExpandedNodeId CookingZoneParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualTemperature_EURange();

  ExpandedNodeId CookingZoneParameterType_ActualProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualProcessTime_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_SetPowerValue = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetPowerValue();

  ExpandedNodeId CookingZoneParameterType_ActualProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualProcessTime_EURange();

  ExpandedNodeId CookingZoneParameterType_ActualProcessTime = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualProcessTime();

  ExpandedNodeId CookingZoneParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetTemperature();

  ExpandedNodeId CookingZoneParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_NominalPower = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_NominalPower();

  ExpandedNodeId CookingZoneParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualTemperature();

  ExpandedNodeId CookingZoneParameterType_CurrentState = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_CurrentState();

  ExpandedNodeId CookingZoneParameterType_NominalPower_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_NominalPower_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_IsPanDetected = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_IsPanDetected();

  ExpandedNodeId CookingZoneParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetTemperature_EURange();

  ExpandedNodeId CookingZoneParameterType_NominalPower_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_NominalPower_EURange();

  ExpandedNodeId CookingZoneParameterType_CookingZoneName = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_CookingZoneName();

  ExpandedNodeId CookingZoneParameterType_SetPowerValue_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetPowerValue_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_ActualPower_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualPower_EngineeringUnits();

  ExpandedNodeId CookingZoneParameterType_ActualPower_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneParameterType_ActualPower_EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ProgramMode();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperatureNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperatureNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperatureNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_OperationMode = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_OperationMode();

  ExpandedNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_HygieneMode = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_HygieneMode();

  ExpandedNodeId DishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_MainTankTemperatureSetpoint__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualHygieneValue = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualHygieneValue();

  ExpandedNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPumpedFinalRinseTemperature__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_HygieneSetpoint = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_HygieneSetpoint();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualPreTankTemperature__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_FinalRinseTemperatureSetpoint__No__();

  ExpandedNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PreTankTemperatureSetpoint__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ProductType = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ProductType();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperatureNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualMainTankTemperature__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ActualFinalRinseTemperature__No___EURange();

  ExpandedNodeId DishWashingMachineProgramParameterType_ProductGroup = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_ProductGroup();

  ExpandedNodeId DishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineProgramParameterType_PumpedFinalRinseTemperatureSetpoint__No___EURange();

  ExpandedNodeId FryerParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetProcessTime();

  ExpandedNodeId FryerParameterType_IsLiftUp = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_IsLiftUp();

  ExpandedNodeId FryerParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetProcessTime_EURange();

  ExpandedNodeId FryerParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_TimeRemaining_EURange();

  ExpandedNodeId FryerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetTemperature_EURange();

  ExpandedNodeId FryerParameterType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_TimeRemaining();

  ExpandedNodeId FryerParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId FryerParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId FryerParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_ActualTemperature();

  ExpandedNodeId FryerParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetTemperature();

  ExpandedNodeId FryerParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_ActualTemperature_EURange();

  ExpandedNodeId FryerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId FryerParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_ProgramMode();

  ExpandedNodeId FryerParameterType_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_SignalMode();

  ExpandedNodeId FryerParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No___EURange();

  ExpandedNodeId FryingAndGrillingParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime();

  ExpandedNodeId FryingAndGrillingParameterType_SetGrillTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No___EURange();

  ExpandedNodeId FryingAndGrillingParameterType_SetGrillTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No__();

  ExpandedNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No___EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_RemainingProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime();

  ExpandedNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No__();

  ExpandedNodeId FryingAndGrillingParameterType_CurrentState = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_CurrentState();

  ExpandedNodeId FryingAndGrillingParameterType_GrillingZoneName = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_GrillingZoneName();

  ExpandedNodeId FryingAndGrillingParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No__();

  ExpandedNodeId FryingAndGrillingParameterType_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime_EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No___EURange();

  ExpandedNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No___EURange();

  ExpandedNodeId FryingAndGrillingParameterType_RemainingProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_RemainingProcessTime_EURange();

  ExpandedNodeId FryingAndGrillingParameterType_SetPlatenTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetPlatenTemperature__No___EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_IsWithPlaten = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_IsWithPlaten();

  ExpandedNodeId FryingAndGrillingParameterType_ActualGrillTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualGrillTemperature__No__();

  ExpandedNodeId FryingAndGrillingParameterType_SetGrillTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetGrillTemperature__No___EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_ActualPlatenTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_ActualPlatenTemperature__No___EngineeringUnits();

  ExpandedNodeId FryingAndGrillingParameterType_PlatenPositionState = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_PlatenPositionState();

  ExpandedNodeId FryingAndGrillingParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingParameterType_SetProcessTime_EURange();

  ExpandedNodeId FryingPanParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature_EURange();

  ExpandedNodeId FryingPanParameterType_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetCoreTemperature();

  ExpandedNodeId FryingPanParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetProcessTime();

  ExpandedNodeId FryingPanParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualTemperature();

  ExpandedNodeId FryingPanParameterType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_TimeRemaining();

  ExpandedNodeId FryingPanParameterType_ActualPressurePan_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualPressurePan_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_TimeRemaining_EURange();

  ExpandedNodeId FryingPanParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetCoreTemperature_EURange();

  ExpandedNodeId FryingPanParameterType_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_CookingLevel();

  ExpandedNodeId FryingPanParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetTemperature();

  ExpandedNodeId FryingPanParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualTemperature_EURange();

  ExpandedNodeId FryingPanParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetTemperature_EURange();

  ExpandedNodeId FryingPanParameterType_ActualPressurePan = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualPressurePan();

  ExpandedNodeId FryingPanParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ProgramMode();

  ExpandedNodeId FryingPanParameterType_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature();

  ExpandedNodeId FryingPanParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_IsLidLocked = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_IsLidLocked();

  ExpandedNodeId FryingPanParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanParameterType_ActualPressurePan_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_ActualPressurePan_EURange();

  ExpandedNodeId FryingPanParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SetProcessTime_EURange();

  ExpandedNodeId FryingPanParameterType_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initFryingPanParameterType_SignalMode();

  ExpandedNodeId IceMachineParameterType_Temperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_Temperature__No___EURange();

  ExpandedNodeId IceMachineParameterType_Temperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_Temperature__No__();

  ExpandedNodeId IceMachineParameterType_LastHarvestTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastHarvestTime_EngineeringUnits();

  ExpandedNodeId IceMachineParameterType_WaterFillTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_WaterFillTime_EURange();

  ExpandedNodeId IceMachineParameterType_LastFreezeTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastFreezeTime_EngineeringUnits();

  ExpandedNodeId IceMachineParameterType_WaterFillTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_WaterFillTime_EngineeringUnits();

  ExpandedNodeId IceMachineParameterType_LastHarvestTime = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastHarvestTime();

  ExpandedNodeId IceMachineParameterType_Temperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_Temperature__No___EngineeringUnits();

  ExpandedNodeId IceMachineParameterType_Status = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_Status();

  ExpandedNodeId IceMachineParameterType_LastHarvestTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastHarvestTime_EURange();

  ExpandedNodeId IceMachineParameterType_LastFreezeTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastFreezeTime_EURange();

  ExpandedNodeId IceMachineParameterType_LastFreezeTime = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_LastFreezeTime();

  ExpandedNodeId IceMachineParameterType_WaterFillTime = CommercialKitchenEquipmentVariableIdsInit.initIceMachineParameterType_WaterFillTime();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime();

  ExpandedNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_FanSpeed = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep();

  ExpandedNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetTemperature_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime();

  ExpandedNodeId MicrowaveCombiOvenParameterType_FanSpeed_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_CookingStep = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_CookingStep();

  ExpandedNodeId MicrowaveCombiOvenParameterType_FanSpeed_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_FanSpeed_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_ActualTemperatureChamber = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_ActualTemperatureChamber();

  ExpandedNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_OperatingMode = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_OperatingMode();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTime_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_SetProcessTime_EURange();

  ExpandedNodeId MicrowaveCombiOvenParameterType_IsDoorOpen = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_IsDoorOpen();

  ExpandedNodeId MicrowaveCombiOvenParameterType_MicrowaveEnergy_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_MicrowaveEnergy_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenParameterType_RemainingProcessTimeStep_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingStep_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_IsLidOpen = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsLidOpen();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingProgram = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram();

  ExpandedNodeId MultiFunctionPanParameterType_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_CookingLevel();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeStep_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No___EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetZoneTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No___EURange();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_IsWithCleaning = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsWithCleaning();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureBottom = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeStep_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_SetZoneTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No__();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureCup = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup();

  ExpandedNodeId MultiFunctionPanParameterType_ActualPressureAbsolute = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute();

  ExpandedNodeId MultiFunctionPanParameterType_MultiFunctionPanMode = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_MultiFunctionPanMode();

  ExpandedNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No__();

  ExpandedNodeId MultiFunctionPanParameterType_IsLidLocked = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsLidLocked();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeStep = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeStep();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeProgram = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram();

  ExpandedNodeId MultiFunctionPanParameterType_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureBottom_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_IsWithLift = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsWithLift();

  ExpandedNodeId MultiFunctionPanParameterType_SpecialFunctionMode = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SpecialFunctionMode();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingProgram_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualPressureAbsolute_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_IsWithPressure = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsWithPressure();

  ExpandedNodeId MultiFunctionPanParameterType_IsWithTilting = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_IsWithTilting();

  ExpandedNodeId MultiFunctionPanParameterType_SetZoneTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetZoneTemperature__No___EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetCoreTemperature();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingStep_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureCup_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_TimeRemainingStep = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_TimeRemainingStep();

  ExpandedNodeId MultiFunctionPanParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetTemperature();

  ExpandedNodeId MultiFunctionPanParameterType_ActualZoneTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualZoneTemperature__No___EURange();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureCup_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureCup_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualCoreTemperature_EURange();

  ExpandedNodeId MultiFunctionPanParameterType_ActualTemperatureBottom_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_ActualTemperatureBottom_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanParameterType_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanParameterType_SetProcessTimeProgram_EngineeringUnits();

  ExpandedNodeId PastaCookerParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId PastaCookerParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_ActualTemperature();

  ExpandedNodeId PastaCookerParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetTemperature_EURange();

  ExpandedNodeId PastaCookerParameterType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_TimeRemaining();

  ExpandedNodeId PastaCookerParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId PastaCookerParameterType_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SignalMode();

  ExpandedNodeId PastaCookerParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_TimeRemaining_EURange();

  ExpandedNodeId PastaCookerParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetProcessTime();

  ExpandedNodeId PastaCookerParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetProcessTime_EURange();

  ExpandedNodeId PastaCookerParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId PastaCookerParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId PastaCookerParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_ProgramMode();

  ExpandedNodeId PastaCookerParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_ActualTemperature_EURange();

  ExpandedNodeId PastaCookerParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_SetTemperature();

  ExpandedNodeId PastaCookerParameterType_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerParameterType_CookingLevel();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureAbsolute = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute();

  ExpandedNodeId PressureCookingKettleParameterType_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_CookingLevel();

  ExpandedNodeId PressureCookingKettleParameterType_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature();

  ExpandedNodeId PressureCookingKettleParameterType_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ProgramMode();

  ExpandedNodeId PressureCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureAbsolute_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_IsLidLocked = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_IsLidLocked();

  ExpandedNodeId PressureCookingKettleParameterType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature();

  ExpandedNodeId PressureCookingKettleParameterType_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature();

  ExpandedNodeId PressureCookingKettleParameterType_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualTemperature_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature();

  ExpandedNodeId PressureCookingKettleParameterType_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_TimeRemaining();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureKettle_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_IsOpenExpressActive = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_IsOpenExpressActive();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureKettle_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleParameterType_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetCoreTemperature_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SetProcessTime();

  ExpandedNodeId PressureCookingKettleParameterType_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualCoreTemperature_EURange();

  ExpandedNodeId PressureCookingKettleParameterType_IsSteamActive = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_IsSteamActive();

  ExpandedNodeId PressureCookingKettleParameterType_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_SignalMode();

  ExpandedNodeId PressureCookingKettleParameterType_ActualPressureKettle = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleParameterType_ActualPressureKettle();

  ExpandedNodeId TrayType_Type = CommercialKitchenEquipmentVariableIdsInit.initTrayType_Type();

  ExpandedNodeId TrayType_ActiveSince_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActiveSince_EngineeringUnits();

  ExpandedNodeId TrayType_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initTrayType_SetTemperature();

  ExpandedNodeId TrayType_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActualTemperature_EngineeringUnits();

  ExpandedNodeId TrayType_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initTrayType_SetTemperature_EURange();

  ExpandedNodeId TrayType_OperatingCounter_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initTrayType_OperatingCounter_EngineeringUnits();

  ExpandedNodeId TrayType_ActiveSince_EURange = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActiveSince_EURange();

  ExpandedNodeId TrayType_OperatingCounter_EURange = CommercialKitchenEquipmentVariableIdsInit.initTrayType_OperatingCounter_EURange();

  ExpandedNodeId TrayType_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActualTemperature();

  ExpandedNodeId TrayType_ActiveSince = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActiveSince();

  ExpandedNodeId TrayType_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ActualTemperature_EURange();

  ExpandedNodeId TrayType_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initTrayType_SetTemperature_EngineeringUnits();

  ExpandedNodeId TrayType_Name = CommercialKitchenEquipmentVariableIdsInit.initTrayType_Name();

  ExpandedNodeId TrayType_OperatingCounter = CommercialKitchenEquipmentVariableIdsInit.initTrayType_OperatingCounter();

  ExpandedNodeId TrayType_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initTrayType_ProgramMode();

  ExpandedNodeId CommercialKitchenDeviceType_BatchInformation_BatchId = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_BatchId();

  ExpandedNodeId CommercialKitchenDeviceType_BatchInformation_OrderId = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_OrderId();

  ExpandedNodeId CommercialKitchenDeviceType_BatchInformation_SystemTime = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_SystemTime();

  ExpandedNodeId CommercialKitchenDeviceType_BatchInformation_LocalTime = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_BatchInformation_LocalTime();

  ExpandedNodeId CommercialKitchenDeviceType_DeviceLocationName = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_DeviceLocationName();

  ExpandedNodeId CommercialKitchenDeviceType_DeviceClass = CommercialKitchenEquipmentVariableIdsInit.initCommercialKitchenDeviceType_DeviceClass();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureSteam = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureSteam();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_BeverageSML = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSML();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_CoffeeType_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_CoffeeType_EnumStrings();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_CurrentState = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_CurrentState();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_TotalMix = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_TotalMix();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_CoffeeType = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_CoffeeType();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_RcpType_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_RcpType_EnumStrings();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureWater();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_RcpType = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_RcpType();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerPressureSteam_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerPressureSteam_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsAmount_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsAmount_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_BoilerTempWater_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_BoilerTempWater_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_FoamAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_FoamAmount();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_MilkAmount = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_MilkAmount();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_Container_EnumStrings = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_Container_EnumStrings();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_BeverageSize_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_BeverageSize_EngineeringUnits();

  ExpandedNodeId CoffeeMachineDeviceType_Parameters_SystemClean = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_Parameters_SystemClean();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_Container = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_Container();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_PowderAmount_EURange = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_PowderAmount_EURange();

  ExpandedNodeId CoffeeMachineDeviceType_RecipeName_GroundsWater = CommercialKitchenEquipmentVariableIdsInit.initCoffeeMachineDeviceType_RecipeName_GroundsWater();

  ExpandedNodeId CombiSteamerDeviceType_IsWithExternalCoreTempSensor = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_IsWithExternalCoreTempSensor();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EngineeringUnits();

  ExpandedNodeId CombiSteamerDeviceType_IsWithAutomaticCleaning = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_IsWithAutomaticCleaning();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_IsDoorOpen = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_IsDoorOpen();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature_EngineeringUnits();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EURange();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EngineeringUnits();

  ExpandedNodeId CombiSteamerDeviceType_IsWithInternalCoreTempSensor = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_IsWithInternalCoreTempSensor();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature_EURange();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No___EURange();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_CombiSteamerMode = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_CombiSteamerMode();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram_EURange();

  ExpandedNodeId CombiSteamerDeviceType_IsWithSousvideTempSensor = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_IsWithSousvideTempSensor();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_TimeRemainingProgram();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No__ = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualTemperatureChamber__No__();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EURange();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No__();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetProcessTimeProgram_EngineeringUnits();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_SetTemperature();

  ExpandedNodeId CombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_CombiSteamer_ActualInternalCoreTemperature__No___EngineeringUnits();

  ExpandedNodeId CombiSteamerDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initCombiSteamerDeviceType_EnergySource();

  ExpandedNodeId CookingKettleDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_EnergySource();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetTemperature_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualTemperature_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetCoreTemperature_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_ProgramMode();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime();

  ExpandedNodeId CookingKettleDeviceType_IsWithCooling = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_IsWithCooling();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_CookingLevel();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SetProcessTime_EURange();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_TimeRemaining_EngineeringUnits();

  ExpandedNodeId CookingKettleDeviceType_CookingKettle_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_CookingKettle_SignalMode();

  ExpandedNodeId CookingKettleDeviceType_IsWithAgitator = CommercialKitchenEquipmentVariableIdsInit.initCookingKettleDeviceType_IsWithAgitator();

  ExpandedNodeId CookingZoneDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_EnergySource();

  ExpandedNodeId CookingZoneDeviceType_CookingZone__No___NominalPower = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower();

  ExpandedNodeId CookingZoneDeviceType_NominalVoltage = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_NominalVoltage();

  ExpandedNodeId CookingZoneDeviceType_NominalVoltage_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_NominalVoltage_EURange();

  ExpandedNodeId CookingZoneDeviceType_CookingZone__No___NominalPower_EURange = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower_EURange();

  ExpandedNodeId CookingZoneDeviceType_IsWithPanDetection = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_IsWithPanDetection();

  ExpandedNodeId CookingZoneDeviceType_NumberOfPhases = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_NumberOfPhases();

  ExpandedNodeId CookingZoneDeviceType_CookingZone__No___NominalPower_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_CookingZone__No___NominalPower_EngineeringUnits();

  ExpandedNodeId CookingZoneDeviceType_NominalVoltage_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initCookingZoneDeviceType_NominalVoltage_EngineeringUnits();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualMainTankTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualMainTankTemperatureNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EngineeringUnits();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EURange = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No___EURange();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualPreTankTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualPreTankTemperatureNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperatureNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No__ = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualFinalRinseTemperature__No__();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_FinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_FinalRinseTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_PumpedFinalRinseTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_PumpedFinalRinseTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_OperationMode = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_OperationMode();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_MainTankTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_MainTankTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_PreTankTemperatureSetpointNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_PreTankTemperatureSetpointNo();

  ExpandedNodeId DishWashingMachineDeviceType_Parameters_ActualPumpedFinalRinseTemperatureNo = CommercialKitchenEquipmentVariableIdsInit.initDishWashingMachineDeviceType_Parameters_ActualPumpedFinalRinseTemperatureNo();

  ExpandedNodeId FryerDeviceType_IsWithLift = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_IsWithLift();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime_EngineeringUnits();

  ExpandedNodeId FryerDeviceType_FryerCup__No___TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining();

  ExpandedNodeId FryerDeviceType_FryerCup__No___ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature_EngineeringUnits();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature_EURange();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SignalMode = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SignalMode();

  ExpandedNodeId FryerDeviceType_FryerCup__No___TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining_EURange();

  ExpandedNodeId FryerDeviceType_FryerCup__No___TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___TimeRemaining_EngineeringUnits();

  ExpandedNodeId FryerDeviceType_FryerCup__No___ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature_EURange();

  ExpandedNodeId FryerDeviceType_FryerCup__No___ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___ActualTemperature();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetProcessTime_EURange();

  ExpandedNodeId FryerDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_EnergySource();

  ExpandedNodeId FryerDeviceType_FryerCup__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___SetTemperature_EngineeringUnits();

  ExpandedNodeId FryerDeviceType_FryerCup__No___ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initFryerDeviceType_FryerCup__No___ProgramMode();

  ExpandedNodeId FryingAndGrillingDeviceType_GrillingZone__No___IsWithPlaten = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingDeviceType_GrillingZone__No___IsWithPlaten();

  ExpandedNodeId FryingAndGrillingDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initFryingAndGrillingDeviceType_EnergySource();

  ExpandedNodeId FryingPanDeviceType_FryingPan_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining_EngineeringUnits();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature_EURange();

  ExpandedNodeId FryingPanDeviceType_FryingPan_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining();

  ExpandedNodeId FryingPanDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_EnergySource();

  ExpandedNodeId FryingPanDeviceType_FryingPan_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_CookingLevel();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature_EURange();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature_EURange();

  ExpandedNodeId FryingPanDeviceType_IsWithPressure = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_IsWithPressure();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime_EURange();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature_EURange();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SignalMode();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ProgramMode();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetTemperature_EngineeringUnits();

  ExpandedNodeId FryingPanDeviceType_FryingPan_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_SetProcessTime_EngineeringUnits();

  ExpandedNodeId FryingPanDeviceType_FryingPan_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_TimeRemaining_EURange();

  ExpandedNodeId FryingPanDeviceType_FryingPan_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initFryingPanDeviceType_FryingPan_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EURange();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_IsDoorOpen = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_IsDoorOpen();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetTemperature_EURange();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EURange();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_RemainingProcessTime_EngineeringUnits();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_OperatingMode = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_OperatingMode();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_SetProcessTime_EURange();

  ExpandedNodeId MicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber = CommercialKitchenEquipmentVariableIdsInit.initMicrowaveCombiOvenDeviceType_MicrowaveCombiOven_ActualTemperatureChamber();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___MultiFunctionPanMode = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___MultiFunctionPanMode();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureCup_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature();

  ExpandedNodeId MultiFunctionPanDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_EnergySource();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___TimeRemainingProgram_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EngineeringUnits();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualCoreTemperature_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetTemperature();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___SetProcessTimeProgram_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EURange = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EURange();

  ExpandedNodeId MultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initMultiFunctionPanDeviceType_MultiFunctionPan__No___ActualTemperatureBottom_EngineeringUnits();

  ExpandedNodeId OvenDeviceType_Chamber__No___OperationMode = CommercialKitchenEquipmentVariableIdsInit.initOvenDeviceType_Chamber__No___OperationMode();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SignalMode();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime_EngineeringUnits();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature_EURange();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining_EURange();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ProgramMode();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_CookingLevel();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature_EngineeringUnits();

  ExpandedNodeId PastaCookerDeviceType_IsWithLift = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_IsWithLift();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining_EngineeringUnits();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetTemperature_EngineeringUnits();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_ActualTemperature_EURange();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_SetProcessTime_EURange();

  ExpandedNodeId PastaCookerDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_EnergySource();

  ExpandedNodeId PastaCookerDeviceType_PastaCooker_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initPastaCookerDeviceType_PastaCooker_TimeRemaining();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_CookingLevel = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_CookingLevel();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsSteamActive = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsSteamActive();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_EnergySource = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_EnergySource();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SignalMode = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SignalMode();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualCoreTemperature_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ProgramMode();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetCoreTemperature();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetProcessTime_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsLidLocked = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsLidLocked();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle_EngineeringUnits();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureKettle();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualTemperature();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_SetTemperature();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_IsOpenExpressActive = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_IsOpenExpressActive();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_TimeRemaining_EURange();

  ExpandedNodeId PressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EURange = CommercialKitchenEquipmentVariableIdsInit.initPressureCookingKettleDeviceType_PressureCookingKettle_ActualPressureAbsolute_EURange();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ProgramMode = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ProgramMode();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter_EngineeringUnits();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___SetTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature_EURange();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActiveSince_EURange = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince_EURange();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___SetTemperature = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___Type = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___Type();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___SetTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___SetTemperature_EngineeringUnits();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature_EURange = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature_EURange();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter_EURange = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter_EURange();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___Name = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___Name();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActiveSince = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___OperatingCounter = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___OperatingCounter();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActualTemperature_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActualTemperature_EngineeringUnits();

  ExpandedNodeId ServeryCounterDeviceType_Tray__No___ActiveSince_EngineeringUnits = CommercialKitchenEquipmentVariableIdsInit.initServeryCounterDeviceType_Tray__No___ActiveSince_EngineeringUnits();
}
