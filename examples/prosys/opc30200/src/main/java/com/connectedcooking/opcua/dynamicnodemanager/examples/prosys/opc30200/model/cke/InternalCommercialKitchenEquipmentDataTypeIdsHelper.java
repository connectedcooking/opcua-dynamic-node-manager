// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.stack.builtintypes.ExpandedNodeId;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * Generated on 2024-06-17 14:43:51
 */
class InternalCommercialKitchenEquipmentDataTypeIdsHelper {
  public static final Set<ExpandedNodeId> ALL_DATATYPE_IDENTIFIERS;

  static {
    Set<ExpandedNodeId> allIds = new HashSet<ExpandedNodeId>();
    allIds.add(CommercialKitchenEquipmentDataTypeIds.BeverageSMLEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.ChamberModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.CoffeeMachineModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.CombiSteamerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.CookingKettleModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.CurrentStateEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.EnergySourceEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.FryerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.FryingPanModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.GrillingZoneStateEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.HygieneModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.MultiFunctionPanModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.OperatingModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.OperationModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.PastaCookerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.PlatenPositionStateEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.PressureCookingKettleModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.ProgramModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.SignalModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.SpecialCookingModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.SpecialFunctionModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.StatusEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.TrayModeEnumeration);
    allIds.add(CommercialKitchenEquipmentDataTypeIds.TrayTypeEnumeration);
    ALL_DATATYPE_IDENTIFIERS = Collections.unmodifiableSet(allIds);
  }
}
