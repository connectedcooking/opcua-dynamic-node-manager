// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.di;

import com.prosysopc.ua.stack.builtintypes.ExpandedNodeId;

/**
 * Generated on 2023-09-26 10:56:50
 */
public interface DIObjectTypeIds {
  ExpandedNodeId TopologyElementType = DIUaIds.TopologyElementType.asExpandedNodeId();

  ExpandedNodeId IVendorNameplateType = DIUaIds.IVendorNameplateType.asExpandedNodeId();

  ExpandedNodeId ITagNameplateType = DIUaIds.ITagNameplateType.asExpandedNodeId();

  ExpandedNodeId IDeviceHealthType = DIUaIds.IDeviceHealthType.asExpandedNodeId();

  ExpandedNodeId ISupportInfoType = DIUaIds.ISupportInfoType.asExpandedNodeId();

  ExpandedNodeId ComponentType = DIUaIds.ComponentType.asExpandedNodeId();

  ExpandedNodeId DeviceType = DIUaIds.DeviceType.asExpandedNodeId();

  ExpandedNodeId SoftwareType = DIUaIds.SoftwareType.asExpandedNodeId();

  ExpandedNodeId BlockType = DIUaIds.BlockType.asExpandedNodeId();

  ExpandedNodeId DeviceHealthDiagnosticAlarmType = DIUaIds.DeviceHealthDiagnosticAlarmType.asExpandedNodeId();

  ExpandedNodeId FailureAlarmType = DIUaIds.FailureAlarmType.asExpandedNodeId();

  ExpandedNodeId CheckFunctionAlarmType = DIUaIds.CheckFunctionAlarmType.asExpandedNodeId();

  ExpandedNodeId OffSpecAlarmType = DIUaIds.OffSpecAlarmType.asExpandedNodeId();

  ExpandedNodeId MaintenanceRequiredAlarmType = DIUaIds.MaintenanceRequiredAlarmType.asExpandedNodeId();

  ExpandedNodeId ConfigurableObjectType = DIUaIds.ConfigurableObjectType.asExpandedNodeId();

  ExpandedNodeId BaseLifetimeIndicationType = DIUaIds.BaseLifetimeIndicationType.asExpandedNodeId();

  ExpandedNodeId TimeIndicationType = DIUaIds.TimeIndicationType.asExpandedNodeId();

  ExpandedNodeId NumberOfPartsIndicationType = DIUaIds.NumberOfPartsIndicationType.asExpandedNodeId();

  ExpandedNodeId NumberOfUsagesIndicationType = DIUaIds.NumberOfUsagesIndicationType.asExpandedNodeId();

  ExpandedNodeId LengthIndicationType = DIUaIds.LengthIndicationType.asExpandedNodeId();

  ExpandedNodeId DiameterIndicationType = DIUaIds.DiameterIndicationType.asExpandedNodeId();

  ExpandedNodeId SubstanceVolumeIndicationType = DIUaIds.SubstanceVolumeIndicationType.asExpandedNodeId();

  ExpandedNodeId FunctionalGroupType = DIUaIds.FunctionalGroupType.asExpandedNodeId();

  ExpandedNodeId ProtocolType = DIUaIds.ProtocolType.asExpandedNodeId();

  ExpandedNodeId IOperationCounterType = DIUaIds.IOperationCounterType.asExpandedNodeId();

  ExpandedNodeId NetworkType = DIUaIds.NetworkType.asExpandedNodeId();

  ExpandedNodeId ConnectionPointType = DIUaIds.ConnectionPointType.asExpandedNodeId();

  ExpandedNodeId TransferServicesType = DIUaIds.TransferServicesType.asExpandedNodeId();

  ExpandedNodeId LockingServicesType = DIUaIds.LockingServicesType.asExpandedNodeId();

  ExpandedNodeId SoftwareUpdateType = DIUaIds.SoftwareUpdateType.asExpandedNodeId();

  ExpandedNodeId SoftwareLoadingType = DIUaIds.SoftwareLoadingType.asExpandedNodeId();

  ExpandedNodeId PackageLoadingType = DIUaIds.PackageLoadingType.asExpandedNodeId();

  ExpandedNodeId DirectLoadingType = DIUaIds.DirectLoadingType.asExpandedNodeId();

  ExpandedNodeId CachedLoadingType = DIUaIds.CachedLoadingType.asExpandedNodeId();

  ExpandedNodeId FileSystemLoadingType = DIUaIds.FileSystemLoadingType.asExpandedNodeId();

  ExpandedNodeId SoftwareVersionType = DIUaIds.SoftwareVersionType.asExpandedNodeId();

  ExpandedNodeId PrepareForUpdateStateMachineType = DIUaIds.PrepareForUpdateStateMachineType.asExpandedNodeId();

  ExpandedNodeId InstallationStateMachineType = DIUaIds.InstallationStateMachineType.asExpandedNodeId();

  ExpandedNodeId PowerCycleStateMachineType = DIUaIds.PowerCycleStateMachineType.asExpandedNodeId();

  ExpandedNodeId ConfirmationStateMachineType = DIUaIds.ConfirmationStateMachineType.asExpandedNodeId();
}
