// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.objecttypes;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.PastaCookerModeEnumeration;
import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.SignalModeEnumeration;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.types.opcua.AnalogItemType;
import com.prosysopc.ua.types.opcua.BaseDataVariableType;
import java.lang.Float;
import java.lang.Integer;
import java.lang.String;

/**
 * Generated on 2023-09-26 10:56:54
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/CommercialKitchenEquipment/;i=1020")
public interface PastaCookerParameterType extends KitchenDeviceParameterType {
  String ACTUAL_TEMPERATURE = "ActualTemperature";

  String COOKING_LEVEL = "CookingLevel";

  String PROGRAM_MODE = "ProgramMode";

  String SET_PROCESS_TIME = "SetProcessTime";

  String SET_TEMPERATURE = "SetTemperature";

  String SIGNAL_MODE = "SignalMode";

  String TIME_REMAINING = "TimeRemaining";

  @Mandatory
  AnalogItemType getActualTemperatureNode();

  @Mandatory
  Float getActualTemperature();

  @Mandatory
  void setActualTemperature(Float value) throws StatusException;

  @Mandatory
  BaseDataVariableType getCookingLevelNode();

  @Mandatory
  Integer getCookingLevel();

  @Mandatory
  void setCookingLevel(Integer value) throws StatusException;

  @Mandatory
  BaseDataVariableType getProgramModeNode();

  @Mandatory
  PastaCookerModeEnumeration getProgramMode();

  @Mandatory
  void setProgramMode(PastaCookerModeEnumeration value) throws StatusException;

  @Mandatory
  AnalogItemType getSetProcessTimeNode();

  @Mandatory
  Integer getSetProcessTime();

  @Mandatory
  void setSetProcessTime(Integer value) throws StatusException;

  @Mandatory
  AnalogItemType getSetTemperatureNode();

  @Mandatory
  Float getSetTemperature();

  @Mandatory
  void setSetTemperature(Float value) throws StatusException;

  @Mandatory
  BaseDataVariableType getSignalModeNode();

  @Mandatory
  SignalModeEnumeration getSignalMode();

  @Mandatory
  void setSignalMode(SignalModeEnumeration value) throws StatusException;

  @Mandatory
  AnalogItemType getTimeRemainingNode();

  @Mandatory
  Integer getTimeRemaining();

  @Mandatory
  void setTimeRemaining(Integer value) throws StatusException;
}
