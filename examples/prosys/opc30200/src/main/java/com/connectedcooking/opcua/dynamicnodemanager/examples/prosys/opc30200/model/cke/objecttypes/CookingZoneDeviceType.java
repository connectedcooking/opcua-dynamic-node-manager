// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.objecttypes;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.EnergySourceEnumeration;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.nodes.UaProperty;
import com.prosysopc.ua.types.opcua.AnalogItemType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;

/**
 * Generated on 2024-09-09 10:35:47
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/CommercialKitchenEquipment/;i=1030")
public interface CookingZoneDeviceType extends CommercialKitchenDeviceType {
  String ENERGY_SOURCE = "EnergySource";

  String IS_WITH_PAN_DETECTION = "IsWithPanDetection";

  String NUMBER_OF_PHASES = "NumberOfPhases";

  String COOKING_ZONE___NO__ = "CookingZone_<No.>";

  String NOMINAL_VOLTAGE = "NominalVoltage";

  @Mandatory
  UaProperty getEnergySourceNode();

  @Mandatory
  EnergySourceEnumeration getEnergySource();

  @Mandatory
  void setEnergySource(EnergySourceEnumeration value) throws StatusException;

  @Mandatory
  UaProperty getIsWithPanDetectionNode();

  @Mandatory
  Boolean isIsWithPanDetection();

  @Mandatory
  void setIsWithPanDetection(Boolean value) throws StatusException;

  @Mandatory
  UaProperty getNumberOfPhasesNode();

  @Mandatory
  Integer getNumberOfPhases();

  @Mandatory
  void setNumberOfPhases(Integer value) throws StatusException;

  @Mandatory
  AnalogItemType getNominalVoltageNode();

  @Mandatory
  Integer getNominalVoltage();

  @Mandatory
  void setNominalVoltage(Integer value) throws StatusException;
}
