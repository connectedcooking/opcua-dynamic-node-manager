// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.objecttypes;

import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.GrillingZoneStateEnumeration;
import com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke.datatypes.PlatenPositionStateEnumeration;
import com.prosysopc.ua.StatusException;
import com.prosysopc.ua.TypeDefinitionId;
import com.prosysopc.ua.nodes.Mandatory;
import com.prosysopc.ua.nodes.Optional;
import com.prosysopc.ua.types.opcua.AnalogItemType;
import com.prosysopc.ua.types.opcua.BaseDataVariableType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;

/**
 * Generated on 2024-09-09 10:35:47
 */
@TypeDefinitionId("nsu=http://opcfoundation.org/UA/CommercialKitchenEquipment/;i=1031")
public interface FryingAndGrillingParameterType extends KitchenDeviceParameterType {
  String ACTUAL_GRILL_TEMPERATURE___NO__ = "ActualGrillTemperature_<No.>";

  String ACTUAL_PLATEN_TEMPERATURE___NO__ = "ActualPlatenTemperature_<No.>";

  String CURRENT_STATE = "CurrentState";

  String GRILLING_ZONE_NAME = "GrillingZoneName";

  String IS_WITH_PLATEN = "IsWithPlaten";

  String PLATEN_POSITION_STATE = "PlatenPositionState";

  String REMAINING_PROCESS_TIME = "RemainingProcessTime";

  String SET_GRILL_TEMPERATURE___NO__ = "SetGrillTemperature_<No.>";

  String SET_PLATEN_TEMPERATURE___NO__ = "SetPlatenTemperature_<No.>";

  String SET_PROCESS_TIME = "SetProcessTime";

  List<? extends AnalogItemType> getActualGrillTemperature__No__Nodes();

  List<? extends AnalogItemType> getActualPlatenTemperature__No__Nodes();

  @Optional
  BaseDataVariableType getCurrentStateNode();

  @Optional
  GrillingZoneStateEnumeration getCurrentState();

  @Optional
  void setCurrentState(GrillingZoneStateEnumeration value) throws StatusException;

  @Optional
  BaseDataVariableType getGrillingZoneNameNode();

  @Optional
  String getGrillingZoneName();

  @Optional
  void setGrillingZoneName(String value) throws StatusException;

  @Mandatory
  BaseDataVariableType getIsWithPlatenNode();

  @Mandatory
  Boolean isIsWithPlaten();

  @Mandatory
  void setIsWithPlaten(Boolean value) throws StatusException;

  @Optional
  BaseDataVariableType getPlatenPositionStateNode();

  @Optional
  PlatenPositionStateEnumeration getPlatenPositionState();

  @Optional
  void setPlatenPositionState(PlatenPositionStateEnumeration value) throws StatusException;

  @Optional
  AnalogItemType getRemainingProcessTimeNode();

  @Optional
  Integer getRemainingProcessTime();

  @Optional
  void setRemainingProcessTime(Integer value) throws StatusException;

  List<? extends AnalogItemType> getSetGrillTemperature__No__Nodes();

  List<? extends AnalogItemType> getSetPlatenTemperature__No__Nodes();

  @Optional
  AnalogItemType getSetProcessTimeNode();

  @Optional
  Integer getSetProcessTime();

  @Optional
  void setSetProcessTime(Integer value) throws StatusException;
}
