// Generated by Prosys OPC UA Java SDK Codegen
//
package com.connectedcooking.opcua.dynamicnodemanager.examples.prosys.opc30200.model.cke;

import com.prosysopc.ua.UaNodeId;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

/**
 * Generated on 2025-04-16 18:27:26
 */
class InternalCommercialKitchenEquipmentUaDataTypeIdsHelper {
  public static final Set<UaNodeId> ALL_DATATYPE_IDENTIFIERS;

  static {
    Set<UaNodeId> allIds = new HashSet<UaNodeId>();
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.BeverageSMLEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.ChamberModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.CoffeeMachineModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.CombiSteamerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.CookingKettleModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.CurrentStateEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.EnergySourceEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.FryerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.FryingPanModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.GrillingZoneStateEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.HygieneModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.MultiFunctionPanModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.OperatingModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.OperationModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.PastaCookerModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.PlatenPositionStateEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.PressureCookingKettleModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.ProgramModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.SignalModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.SpecialCookingModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.SpecialFunctionModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.StatusEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.TrayModeEnumeration);
    allIds.add(CommercialKitchenEquipmentUaDataTypeIds.TrayTypeEnumeration);
    ALL_DATATYPE_IDENTIFIERS = Collections.unmodifiableSet(allIds);
  }
}
